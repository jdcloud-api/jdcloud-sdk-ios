/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   
   

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  虚拟机配置描述
@objc(InstanceType)
public class InstanceType:NSObject,Codable{
    /// 实例配置类型名称
    var name:String?
    /// 处理器核数，单位为C
    var cpu:Int32?
    /// 内存大小，单位为M
    var memory:Int32?



    public override init(){
            super.init()
    }

    enum InstanceTypeCodingKeys: String, CodingKey {
        case name
        case cpu
        case memory
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: InstanceTypeCodingKeys.self)
        self.name = try decoderContainer.decode(String?.self, forKey: .name)
        self.cpu = try decoderContainer.decode(Int32?.self, forKey: .cpu)
        self.memory = try decoderContainer.decode(Int32?.self, forKey: .memory)
    }
}
public extension InstanceType{
    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: InstanceTypeCodingKeys.self)
         try encoderContainer.encode(name, forKey: .name)
         try encoderContainer.encode(cpu, forKey: .cpu)
         try encoderContainer.encode(memory, forKey: .memory)
    }
}
