/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   
   

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  cloudInfo
@objc(CloudInfo)
public class CloudInfo:NSObject,Codable{
    /// Id
    var id:String?
    /// Name
    /// Required:true
    var name:String
    /// Vendor
    /// Required:true
    var vendor:String
    /// Info
    /// Required:true
    var info:AnyObject?
    /// Metadata
    var metadata:AnyObject?



    public  init(name:String,vendor:String,info:AnyObject?){
             self.name = name
             self.vendor = vendor
             self.info = info
    }

    enum CloudInfoCodingKeys: String, CodingKey {
        case id
        case name
        case vendor
        case info
        case metadata
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: CloudInfoCodingKeys.self)
        self.id = try decoderContainer.decode(String?.self, forKey: .id)
        self.name = try decoderContainer.decode(String.self, forKey: .name)
        self.vendor = try decoderContainer.decode(String.self, forKey: .vendor)
    }
}
public extension CloudInfo{
    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: CloudInfoCodingKeys.self)
         try encoderContainer.encode(id, forKey: .id)
         try encoderContainer.encode(name, forKey: .name)
         try encoderContainer.encode(vendor, forKey: .vendor)
    }
}
