/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Rds-Database
   与RDS数据库相关的接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

///  根据云提供商查询对应的subnet资源信息
public class GetVpcSubnetByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/vpc_subnets/{id}")
    }
    
}
///  删除子网
public class DeleteVpcSubnetByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/vpc_subnets/{id}")
    }
    
}
///  根据云提供商查询对应的subnet资源信息
public class GetVpcSubnetsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/vpc_subnets")
    }
    
}
///  根据云提供商创建子网
public class CreateVpcSubnetExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/vpc_subnets")
    }
    
}
///  根据云提供商查询对应的VPC资源信息
public class GetVpcByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/vpc_vpcs/{id}")
    }
    
}
///  删除VPC
public class DeleteVpcByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/vpc_vpcs/{id}")
    }
    
}
///  查询私有网络资源列表
public class GetVpcsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/vpc_vpcs")
    }
    
}
///  根据云提供商创建私有网络
public class CreateVpcExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/vpc_vpcs")
    }
    
}
///  根据云提供商查询对应的VM资源信息
public class GetVmInstancesByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/vm_instances/{id}")
    }
    
}
///  通过虚拟机id删除虚拟机
public class DeleteVmInstanceByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/vm_instances/{id}")
    }
    
}
///  根据云提供商查询对应的虚拟机资源信息
public class GetVmInstancesExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/vm_instances")
    }
    
}
///  根据云提供商创建虚拟机
public class CreateVmInstanceExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/vm_instances")
    }
    
}
///  停止运行一台实例。只有状态为 运行中（Running）的实例才可以进行此操作。
public class StopVmInstanceByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/vm_instances/{id}:stop")
    }
    
}
///  启动一台实例。实例状态必须为 已停止（Stopped），才可以调用该接口。
public class StartVmInstanceByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/vm_instances/{id}:start")
    }
    
}
///  只能重启状态为 运行中（Running）的实例。
public class RebootVmInstanceByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/vm_instances/{id}:reboot")
    }
    
}
///  根据云提供商查询对应的RDS实例信息
public class GetRdsInstancesExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/rds_instances")
    }
    
}
///  根据给定的信息，创建RDS实例
public class CreateRdsInstanceExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/rds_instances")
    }
    
}
///  查询指定ID的RDS实例信息
public class GetRdsByInstIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/rds_instances/{instId}")
    }
    
}
///  删除指定ID的RDS实例信息
public class DeleteRdsByInstIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/rds_instances/{instId}")
    }
    
}
///  查询部署信息列表
public class GetDeploymentsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/deployments")
    }
    
}
///  创建部署信息
public class CreateDeploymentExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/deployments")
    }
    
}
///  根据已有资源反向生成deployment
public class ReverseDeploymentExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/deployments:reverse")
    }
    
}
///  查询部署信息
public class GetDeploymentsByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/deployments/{id}")
    }
    
}
///  修改部署信息
public class EditDeploymentExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/deployments/{id}")
    }
    
}
///  删除部署信息
public class DeleteDeploymentExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/deployments/{id}")
    }
    
}
///  克隆部署信息
public class CloneDeploymentExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/deployments/{id}:clone")
    }
    
}
///  预部署
public class DryrunDeploymentExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/deployments/{id}:dryrun")
    }
    
}
///  应用部署
public class ApplyDeploymentExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/deployments/{id}:apply")
    }
    
}
///  查询执行结果
public class GetDeploymentResultExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/deployments/{id}/result")
    }
    
}
///  查询应用记录
public class GetDeploymentVersionsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/deployments/{id}/versions")
    }
    
}
///  查询应用记录详细信息
public class GetDeploymentsVersionExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/deployments/{id}/versions/{version_id}")
    }
    
}
///  应用部署回滚
public class RollbackDeploymentsVersionExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/deployments/{id}/versions/{version_id}:rollback")
    }
    
}
///  查询某一次的历史执行结果（内部使用）
public class GetDeploymentsResultsByIdRecordExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/deployments/{id}/results/{record}")
    }
    
}
///  根据云提供商查询对应的密钥对资源信息
public class GetVmKeypairsByNameExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/vm_keypairs/{name}")
    }
    
}
///  删除密钥对
public class DeleteVmKeypairByNameExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/vm_keypairs/{name}")
    }
    
}
///  根据云提供商查询对应的密钥对资源信息
public class GetVmKeypairsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/vm_keypairs")
    }
    
}
///  根据云提供商创建密钥对
public class CreateVmKeypairExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/vm_keypairs")
    }
    
}
///  获取任务列表
public class GetTransferTasksExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/oss_transferTasks")
    }
    
}
///  创建任务
public class CreateTransferTaskExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/oss_transferTasks_simple")
    }
    
}
///  根据指定ID获取任务信息
public class GetTransferTaskByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/oss_transferTasks/{id}")
    }
    
}
///  根据指定ID修改任务
public class EditTransferTaskExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/oss_transferTasks/{id}")
    }
    
}
///  根据指定ID删除任务
public class DeleteTransferTaskExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/oss_transferTasks/{id}")
    }
    
}
///  根据指定ID启动任务
public class StartTransferTaskExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/oss_transferTasks/{id}:start")
    }
    
}
///  根据指定ID停止任务
public class StopTransferTaskExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/oss_transferTasks/{id}:stop")
    }
    
}
///  根据指定任务id查询迁移进度
public class GetTransferTaskProgressExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/oss_transferTasks/{id}/progress")
    }
    
}
///  根据指定任务id查询迁移失败文件列表
public class GetTransferTaskFailedFilesExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/oss_transferTasks/{id}/failed-files")
    }
    
}
///  根据云提供商查询对应的OSS存储桶列表
public class GetBucketsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/oss_buckets")
    }
    
}
///  根据给定的信息，创建OSS存储桶
public class CreateBucketExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/oss_buckets")
    }
    
}
///  根据云提供商查询对应的OSS存储桶信息
public class GetBucketByNameExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/oss_buckets/{name}")
    }
    
}
///  删除指定ID的OSS存储桶信息
public class DeleteBucketExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/oss_buckets/{name}")
    }
    
}
///  根据过滤条件，取得指定OSS存储桶上的文件列表
public class GetBucketFilesExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/oss_buckets/{name}/files")
    }
    
}
///  查询数据同步通道信息
public class GetChannelsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/migration_mysqlChannels")
    }
    
}
///  创建数据同步通道
public class CreateChannelExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/migration_mysqlChannels")
    }
    
}
///  删除channel
public class DeleteChannelExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/migration_mysqlChannels/{id}")
    }
    
}
///  启动数据同步
public class StartChannelExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/migration_mysqlChannels/{id}:start")
    }
    
}
///  停止数据同步
public class StopChannelExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/migration_mysqlChannels/{id}:stop")
    }
    
}
///  查询数据源
public class GetDatasourcesExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/migration_mysqlDatasources")
    }
    
}
///  创建数据源
public class CreateDatasourceExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/migration_mysqlDatasources")
    }
    
}
///  删除数据源
public class DeleteDatasourceExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/migration_mysqlDatasources/{id}")
    }
    
}
///  查询指定的安全组资源信息
public class GetVpcSecurityGroupByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/vpc_securityGroups/{id}")
    }
    
}
///  删除安全组
public class DeleteVpcSecurityGroupByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/vpc_securityGroups/{id}")
    }
    
}
///  根据云提供商查询对应的安全组资源信息
public class GetVpcSecurityGroupsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/vpc_securityGroups")
    }
    
}
///  根据云提供商创建安全组
public class CreateVpcSecurityGroupExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/vpc_securityGroups")
    }
    
}
///  新增安全组规则
public class CreateSecurityGroupsRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/vpc_securityGroups/{id}/rule")
    }
    
}
///  删除安全组规则
public class DeleteSecurityGroupsRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/vpc_securityGroups/{id}/rule")
    }
    
}
///  读取指定ID的运行结果和运行状态
public class GetTaskInfoHistoryByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/task_infos/{task}/history")
    }
    
}
///  读取指定ID的运行结果和运行状态
public class GetTaskInfoByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/task_infos/{task}")
    }
    
}
///  根据过滤条件，取得指定RDS实例上的账号信息
public class GetRdsAccountsByInstIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/rds_instances/{instId}/accounts")
    }
    
}
///  根据给定的信息，创建指定RDS实例的账户
public class CreateRdsAccountsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/rds_instances/{instId}/accounts")
    }
    
}
///  取得指定RDS实例上的指定账号信息
public class GetRdsAccountsByInstIdAndAccountNameExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/rds_instances/{instId}/accounts/{accountName}")
    }
    
}
///  删除指定RDS实例上，指定用户名的账号信息
public class DeleteRdsAccountExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/rds_instances/{instId}/accounts/{accountName}")
    }
    
}
///  给RDS账号分配数据库权限
public class GrantRdsAccountExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/rds_instances/{instId}/accounts/{accountName}:grant")
    }
    
}
///  撤销RDS账号在指定数据库的所有权限
public class RevokeRdsAccountExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/rds_instances/{instId}/accounts/{accountName}/databases/{dbName}:revoke")
    }
    
}
///  通过异步任务，给RDS账号分配数据库权限
public class GrantRdsAccountsByTaskExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/rds_instances/{instId}/accounts/{accountName}:grantByTask")
    }
    
}
///  获取当前用户的云注册信息
public class GetCloudInfosExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/cloud_info")
    }
    
}
///  为指定用户关联云
public class RegistCloudInfoExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/cloud_info")
    }
    
}
///  获取指定云信息
public class GetCloudInfoByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/cloud_info/{cloudId}")
    }
    
}
///  获取指定云信息
public class UnregistCloudInfoExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/cloud_info/{cloudId}")
    }
    
}
///  验证指定云信息的AK、SK
public class ValidCloudInfoExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/cloud_info/{cloudId}/valid")
    }
    
}
///  虚拟机规格列表
public class GetVmInstanceTypesExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/vm_instanceTypes")
    }
    
}
///  根据过滤条件，查监听器列表
public class GetLbHttpListenerExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/vpc_lbHttpListener")
    }
    
}
///  创建HTTP监听器
public class CreateVpcLBHttpListenerExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/vpc_lbHttpListener")
    }
    
}
///  根据云提供商查询对应的公网IP资源信息
public class GetVpcEipsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/vpc_eips")
    }
    
}
///  根据云提供商分配公网IP
public class CreateVpcEipExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/vpc_eips")
    }
    
}
///  根据云提供商查询对应的公网IP资源信息
public class GetVpcEipByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/vpc_eips/{id}")
    }
    
}
///  释放公网IP
public class DeleteVpcEipByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/vpc_eips/{id}")
    }
    
}
///  弹性公网IP绑定到虚拟机
public class AssociateVpcEipByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/vpc_eips/{id}:associate")
    }
    
}
///  解绑公网IP
public class DisassociateVpcEipByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/vpc_eips/{id}:disassociate")
    }
    
}
///  根据云提供商查询对应的云硬盘资源信息
public class GetDisksExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/disk_disks")
    }
    
}
///  根据云提供商创建云硬盘
public class CreateDiskExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/disk_disks")
    }
    
}
///  根据云提供商查询对应的云硬盘资源信息
public class GetDiskByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/disk_disks/{id}")
    }
    
}
///  删除云硬盘
public class RemoveDiskByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/disk_disks/{id}")
    }
    
}
///  云硬盘挂载至虚拟机
public class AttachDiskToVmInstanceByDiskIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/disk_disks/{id}:attach")
    }
    
}
///  从虚拟机卸载云硬盘
public class DetachDiskToVmInstanceByDiskIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/disk_disks/{id}:detach")
    }
    
}
///  根据云提供商查询对应的网卡资源信息
public class GetVpcNetworkInterfaceByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/vpc_networkInterfaces/{id}")
    }
    
}
///  删除弹性网卡
public class DeleteVpcNetworkInterfaceByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/vpc_networkInterfaces/{id}")
    }
    
}
///  根据云提供商查询对应的网卡资源信息
public class GetVpcNetworkInterfacesExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/vpc_networkInterfaces")
    }
    
}
///  根据云提供商创建网卡
public class CreateVpcNetworkInterfaceExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/vpc_networkInterfaces")
    }
    
}
///  网卡挂载虚拟机
public class AttachVpcNetworkInterfaceByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/vpc_networkInterfaces/{id}:attach")
    }
    
}
///  卸载网卡
public class DetachVpcNetworkInterfaceByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/vpc_networkInterfaces/{id}:detach")
    }
    
}
///  根据云提供商查询对应的SLB资源信息
public class GetVpcSlbByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/vpc_slbs/{id}")
    }
    
}
///  删除SLB
public class DeleteVpcSlbByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/vpc_slbs/{id}")
    }
    
}
///  根据云提供商查询对应的负载均衡资源信息
public class GetVpcSlbsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/vpc_slbs")
    }
    
}
///  根据云提供商创建负载均衡
public class CreateVpcSlbExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/vpc_slbs")
    }
    
}
///  启动负载均衡
public class StartSlbExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/vpc_slbs/{id}:start")
    }
    
}
///  停止负载均衡
public class StopSlbExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/vpc_slbs/{id}:stop")
    }
    
}
///  删除监听器
public class DeleteSlbsListenerExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/vpc_slbs_listener/{id}")
    }
    
}
///  启动监听器
public class StartSlbListenerExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/vpc_slbs_listener/{id}:start")
    }
    
}
///  停止监听器
public class StopSlbListenerExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/vpc_slbs_listener/{id}:stop")
    }
    
}
///  根据过滤条件，取得服务器组的信息
public class GetVpcVServerGroupsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/vpc_vserverGroups")
    }
    
}
///  创建虚拟服务器组，并添加后端服务器
public class CreateVpcVServerGroupExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/vpc_vserverGroups")
    }
    
}
///  根据过滤条件，取得服务器组的信息
public class GetVserverGroupsByIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/vpc_vserverGroups/{id}")
    }
    
}
///  删除服务器组
public class DeleteVserverGroupExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/vpc_vserverGroups/{id}")
    }
    
}
///  根据过滤条件，取得镜像资源的信息
public class GetVmImagesExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/vm_images")
    }
    
}
///  根据数据库类型，取得RDS实例的规格
public class GetRdsSpecificationExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/rds_specification/{engine}")
    }
    
}
///  查询地域列表信息
public class GetRegionsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/regions")
    }
    
}
///  查询可用域列表信息
public class GetRegionsAvailableZonesExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/regions_availableZones/{region}")
    }
    
}
///  根据过滤条件，取得指定RDS实例上的数据库信息
public class GetRdsDatabasesByInstIdExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/rds_instances/{instId}/databases")
    }
    
}
///  根据给定的信息，创建指定RDS实例的数据库
public class CreateRdsDatabaseExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/rds_instances/{instId}/databases")
    }
    
}
///  根据过滤条件，取得指定RDS实例上的数据库信息
public class GetRdsDatabaseByInstIdAndDbNameExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/rds_instances/{instId}/databases/{dbName}")
    }
    
}
///  删除指定RDS实例上，指定数据库名的数据库信息
public class DeleteRdsDatabaseExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/rds_instances/{instId}/databases/{dbName}")
    }
    
}
