/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Stack
   Interface of Stack

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  查询资源栈列表
@objc(DescribeStacksRequest)
public class DescribeStacksRequest:JdCloudRequest
{
    /// 当前所在页，默认为1
    var pageNumber:Int64?

    /// 页面大小，默认为20；取值范围[1, 100]
    var pageSize:Int64?

    /// 资源栈名称
    var stackName:String?

    /// 资源栈正在执行的动作
    var action:String?

    /// 资源栈正在执行的动作的状态
    var status:String?

    /// 创建开始时间
    var createStartTime:String?

    /// 创建结束时间
    var createEndTime:String?

    /// 更新开始时间
    var updateStartTime:String?

    /// 更新结束时间
    var updateEndTime:String?

    /// 排序字段, createtime, updatetime
    var sortField:String?

    /// 排序方式，asc，desc
    var sortBy:String?




    enum DescribeStacksRequestRequestCodingKeys: String, CodingKey {
        case pageNumber
        case pageSize
        case stackName
        case action
        case status
        case createStartTime
        case createEndTime
        case updateStartTime
        case updateEndTime
        case sortField
        case sortBy
    }

    public override func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: DescribeStacksRequestRequestCodingKeys.self)
        try encoderContainer.encode(pageNumber, forKey: .pageNumber)
        try encoderContainer.encode(pageSize, forKey: .pageSize)
        try encoderContainer.encode(stackName, forKey: .stackName)
        try encoderContainer.encode(action, forKey: .action)
        try encoderContainer.encode(status, forKey: .status)
        try encoderContainer.encode(createStartTime, forKey: .createStartTime)
        try encoderContainer.encode(createEndTime, forKey: .createEndTime)
        try encoderContainer.encode(updateStartTime, forKey: .updateStartTime)
        try encoderContainer.encode(updateEndTime, forKey: .updateEndTime)
        try encoderContainer.encode(sortField, forKey: .sortField)
        try encoderContainer.encode(sortBy, forKey: .sortBy)

    }
}
