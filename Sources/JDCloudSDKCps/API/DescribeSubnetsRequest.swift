/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   云物理服务器
   云物理服务器子网操作相关的接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore
import JDCloudSDKCommon


///  查询子网列表
@objc(DescribeSubnetsRequest)
public class DescribeSubnetsRequest:JdCloudRequest
{
    /// 页码；默认为1
    var pageNumber:Int?

    /// 分页大小；默认为20；取值范围[20, 100]
    var pageSize:Int?

    /// 可用区，精确匹配
    var az:String?

    /// 子网名称
    var name:String?

    /// 私有网络ID，精确匹配
    var vpcId:String?

    /// subnetId - 子网ID，精确匹配，支持多个
      /// 
    var filters:[Filter?]?




    enum DescribeSubnetsRequestRequestCodingKeys: String, CodingKey {
        case pageNumber
        case pageSize
        case az
        case name
        case vpcId
        case filters
    }

    public override func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: DescribeSubnetsRequestRequestCodingKeys.self)
        try encoderContainer.encode(pageNumber, forKey: .pageNumber)
        try encoderContainer.encode(pageSize, forKey: .pageSize)
        try encoderContainer.encode(az, forKey: .az)
        try encoderContainer.encode(name, forKey: .name)
        try encoderContainer.encode(vpcId, forKey: .vpcId)
        try encoderContainer.encode(filters, forKey: .filters)

    }
}
