/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   云物理服务器
   云物理服务器操作相关的接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

/// 查询云物理服务器支持的操作系统
@objc(DescribeOSResult)
public class DescribeOSResult:NSObject,JdCloudResult
{
    /// Oss
    var oss:[Os?]?



    public override init(){
        super.init()
    }

    enum DescribeOSResultCodingKeys: String, CodingKey {
        case oss
    }

    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: DescribeOSResultCodingKeys.self)
        if decoderContainer.contains(.oss)
        {
            self.oss = try decoderContainer.decode([Os?]?.self, forKey: .oss)
        }
    }
}
public extension DescribeOSResult{
    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: DescribeOSResultCodingKeys.self)
        try encoderContainer.encode(oss, forKey: .oss)
    }
}
