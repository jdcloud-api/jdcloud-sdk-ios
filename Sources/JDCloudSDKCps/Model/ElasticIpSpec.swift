/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   
   

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCharge

///  elasticIpSpec
@objc(ElasticIpSpec)
public class ElasticIpSpec:NSObject,Codable{
    /// 带宽, 范围[1,200] 单位Mbps
    /// Required:true
    var bandwidth:Int
    /// 购买数量
    /// Required:true
    var count:Int
    /// 计费配置
    /// Required:true
    var charge:ChargeSpec



    public  init(bandwidth:Int,count:Int,charge:ChargeSpec){
             self.bandwidth = bandwidth
             self.count = count
             self.charge = charge
    }

    enum ElasticIpSpecCodingKeys: String, CodingKey {
        case bandwidth
        case count
        case charge
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: ElasticIpSpecCodingKeys.self)
        self.bandwidth = try decoderContainer.decode(Int.self, forKey: .bandwidth)
        self.count = try decoderContainer.decode(Int.self, forKey: .count)
        self.charge = try decoderContainer.decode(ChargeSpec.self, forKey: .charge)
    }
}
public extension ElasticIpSpec{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: ElasticIpSpecCodingKeys.self)
         try encoderContainer.encode(bandwidth, forKey: .bandwidth)
         try encoderContainer.encode(count, forKey: .count)
         try encoderContainer.encode(charge, forKey: .charge)
    }
}
