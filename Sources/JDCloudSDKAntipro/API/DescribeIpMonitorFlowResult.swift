/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Attack Log APIs
   Anti DDoS Protection Package Attack Log APIs

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

/// 查询公网 IP 的监控流量
@objc(DescribeIpMonitorFlowResult)
public class DescribeIpMonitorFlowResult:NSObject,JdCloudResult
{
    /// Bps
    var bps:IpResourceFlow?

    /// Pps
    var pps:IpResourceFlow?



    public override init(){
        super.init()
    }

    enum DescribeIpMonitorFlowResultCodingKeys: String, CodingKey {
        case bps
        case pps
    }

    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: DescribeIpMonitorFlowResultCodingKeys.self)
        if decoderContainer.contains(.bps)
        {
            self.bps = try decoderContainer.decode(IpResourceFlow?.self, forKey: .bps)
        }
        if decoderContainer.contains(.pps)
        {
            self.pps = try decoderContainer.decode(IpResourceFlow?.self, forKey: .pps)
        }
    }
}
public extension DescribeIpMonitorFlowResult{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: DescribeIpMonitorFlowResultCodingKeys.self)
        try encoderContainer.encode(bps, forKey: .bps)
        try encoderContainer.encode(pps, forKey: .pps)
    }
}
