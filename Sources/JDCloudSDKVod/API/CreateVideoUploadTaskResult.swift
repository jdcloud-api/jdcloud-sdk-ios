/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Media Upload
   文件上传

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

/// 获取视频上传地址和凭证
@objc(CreateVideoUploadTaskResult)
public class CreateVideoUploadTaskResult:NSObject,JdCloudResult
{
    /// 视频ID
    var videoId:String?

    /// 视频上传地址
    var uploadUrl:String?



    public override init(){
        super.init()
    }

    enum CreateVideoUploadTaskResultCodingKeys: String, CodingKey {
        case videoId
        case uploadUrl
    }

    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: CreateVideoUploadTaskResultCodingKeys.self)
        if decoderContainer.contains(.videoId)
        {
            self.videoId = try decoderContainer.decode(String?.self, forKey: .videoId)
        }
        if decoderContainer.contains(.uploadUrl)
        {
            self.uploadUrl = try decoderContainer.decode(String?.self, forKey: .uploadUrl)
        }
    }
}
public extension CreateVideoUploadTaskResult{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: CreateVideoUploadTaskResultCodingKeys.self)
        try encoderContainer.encode(videoId, forKey: .videoId)
        try encoderContainer.encode(uploadUrl, forKey: .uploadUrl)
    }
}
