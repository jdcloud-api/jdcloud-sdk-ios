/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Common definitions and parameters
   公共实体与参数定义

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  pageProperties
@objc(PageProperties)
public class PageProperties:NSObject,Codable{
    /// 当前页码
    var pageNumber:Int?
    /// 每页数量
    var pageSize:Int?
    /// 查询总数
    var totalElements:Int?
    /// 总页数
    var totalPages:Int?



    public override init(){
            super.init()
    }

    enum PagePropertiesCodingKeys: String, CodingKey {
        case pageNumber
        case pageSize
        case totalElements
        case totalPages
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: PagePropertiesCodingKeys.self)
        if decoderContainer.contains(.pageNumber)
        {
            self.pageNumber = try decoderContainer.decode(Int?.self, forKey: .pageNumber)
        }
        if decoderContainer.contains(.pageSize)
        {
            self.pageSize = try decoderContainer.decode(Int?.self, forKey: .pageSize)
        }
        if decoderContainer.contains(.totalElements)
        {
            self.totalElements = try decoderContainer.decode(Int?.self, forKey: .totalElements)
        }
        if decoderContainer.contains(.totalPages)
        {
            self.totalPages = try decoderContainer.decode(Int?.self, forKey: .totalPages)
        }
    }
}
public extension PageProperties{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: PagePropertiesCodingKeys.self)
         try encoderContainer.encode(pageNumber, forKey: .pageNumber)
         try encoderContainer.encode(pageSize, forKey: .pageSize)
         try encoderContainer.encode(totalElements, forKey: .totalElements)
         try encoderContainer.encode(totalPages, forKey: .totalPages)
    }
}
