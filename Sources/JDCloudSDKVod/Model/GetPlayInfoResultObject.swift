/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Video Management
   视频资源管理相关接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  获取音视频播放信息响应体
@objc(GetPlayInfoResultObject)
public class GetPlayInfoResultObject:NSObject,Codable{
    /// 视频基础信息
    var baseInfo:VideoBaseInfo?
    /// 视频播放信息列表
    var playInfoList:[VideoPlayInfo?]?



    public override init(){
            super.init()
    }

    enum GetPlayInfoResultObjectCodingKeys: String, CodingKey {
        case baseInfo
        case playInfoList
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: GetPlayInfoResultObjectCodingKeys.self)
        if decoderContainer.contains(.baseInfo)
        {
            self.baseInfo = try decoderContainer.decode(VideoBaseInfo?.self, forKey: .baseInfo)
        }
        if decoderContainer.contains(.playInfoList)
        {
            self.playInfoList = try decoderContainer.decode([VideoPlayInfo?]?.self, forKey: .playInfoList)
        }
    }
}
public extension GetPlayInfoResultObject{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: GetPlayInfoResultObjectCodingKeys.self)
         try encoderContainer.encode(baseInfo, forKey: .baseInfo)
         try encoderContainer.encode(playInfoList, forKey: .playInfoList)
    }
}
