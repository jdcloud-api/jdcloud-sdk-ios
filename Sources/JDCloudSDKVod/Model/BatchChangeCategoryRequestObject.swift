/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Video Management
   视频资源管理相关接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  batchChangeCategoryRequestObject
@objc(BatchChangeCategoryRequestObject)
public class BatchChangeCategoryRequestObject:NSObject,Codable{
    /// 分类ID
    var categoryId:Int64?
    /// 视频分类ID列表
    var videoIds:[String?]?



    public override init(){
            super.init()
    }

    enum BatchChangeCategoryRequestObjectCodingKeys: String, CodingKey {
        case categoryId
        case videoIds
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: BatchChangeCategoryRequestObjectCodingKeys.self)
        if decoderContainer.contains(.categoryId)
        {
            self.categoryId = try decoderContainer.decode(Int64?.self, forKey: .categoryId)
        }
        if decoderContainer.contains(.videoIds)
        {
            self.videoIds = try decoderContainer.decode([String?]?.self, forKey: .videoIds)
        }
    }
}
public extension BatchChangeCategoryRequestObject{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: BatchChangeCategoryRequestObjectCodingKeys.self)
         try encoderContainer.encode(categoryId, forKey: .categoryId)
         try encoderContainer.encode(videoIds, forKey: .videoIds)
    }
}
