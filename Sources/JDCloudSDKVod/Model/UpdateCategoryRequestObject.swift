/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Media Category
   分类管理

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  修改分类请求信息
@objc(UpdateCategoryRequestObject)
public class UpdateCategoryRequestObject:NSObject,Codable{
    /// 分类名称
    var name:String?
    /// 父分类ID，取值为 0 或 null 时，表示该分类为一级分类
      /// 
    var parentId:Int64?
    /// 分类描述信息
    var descriptionValue:String?



    public override init(){
            super.init()
    }

    enum UpdateCategoryRequestObjectCodingKeys: String, CodingKey {
        case name
        case parentId
        case descriptionValue = "description"
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: UpdateCategoryRequestObjectCodingKeys.self)
        if decoderContainer.contains(.name)
        {
            self.name = try decoderContainer.decode(String?.self, forKey: .name)
        }
        if decoderContainer.contains(.parentId)
        {
            self.parentId = try decoderContainer.decode(Int64?.self, forKey: .parentId)
        }
        if decoderContainer.contains(.descriptionValue)
        {
            self.descriptionValue = try decoderContainer.decode(String?.self, forKey: .descriptionValue)
        }
    }
}
public extension UpdateCategoryRequestObject{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: UpdateCategoryRequestObjectCodingKeys.self)
         try encoderContainer.encode(name, forKey: .name)
         try encoderContainer.encode(parentId, forKey: .parentId)
         try encoderContainer.encode(descriptionValue, forKey: .descriptionValue)
    }
}
