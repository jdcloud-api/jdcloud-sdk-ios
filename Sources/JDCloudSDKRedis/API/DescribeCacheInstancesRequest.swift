/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   缓存Redis实例接口
   缓存Redis实例相关接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore
import JDCloudSDKCommon


///  查询缓存Redis实例列表及其实例信息，可分页查询，查询指定页码，指定分页大小和指定过滤条件
@objc(DescribeCacheInstancesRequest)
public class DescribeCacheInstancesRequest:JdCloudRequest
{
    /// 请求查询缓存实例的页码；默认为1
    var pageNumber:Int?

    /// 请求查询缓存实例的分页大小；默认为20；取值范围[10, 100]
    var pageSize:Int?

    /// cacheInstanceId -缓存实例Id，精确匹配，支持多个
      /// cacheInstanceName - 缓存实例名称，模糊匹配，支持单个
      /// cacheInstanceStatus - 缓存你实例状态，精确匹配，支持多个(running：运行，error：错误，creating：创建中，changing：变配中，deleting：删除中)
      /// 
    var filters:[Filter?]?

    /// createTime - 创建时间(asc：正序，desc：倒序)
      /// 
    var sorts:[Sort?]?




    enum DescribeCacheInstancesRequestRequestCodingKeys: String, CodingKey {
        case pageNumber
        case pageSize
        case filters
        case sorts
    }

    public override func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: DescribeCacheInstancesRequestRequestCodingKeys.self)
        try encoderContainer.encode(pageNumber, forKey: .pageNumber)
        try encoderContainer.encode(pageSize, forKey: .pageSize)
        try encoderContainer.encode(filters, forKey: .filters)
        try encoderContainer.encode(sorts, forKey: .sorts)

    }
}
