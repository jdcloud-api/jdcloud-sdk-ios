/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   
   

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  clusterInfo对象
@objc(ClusterInfo)
public class ClusterInfo:NSObject,Codable{
    /// proxy列表
    var proxies:Proxy?
    /// shard列表
    var shards:Shard?



    public override init(){
            super.init()
    }

    enum ClusterInfoCodingKeys: String, CodingKey {
        case proxies
        case shards
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: ClusterInfoCodingKeys.self)
        if decoderContainer.contains(.proxies)
        {
            self.proxies = try decoderContainer.decode(Proxy?.self, forKey: .proxies)
        }
        if decoderContainer.contains(.shards)
        {
            self.shards = try decoderContainer.decode(Shard?.self, forKey: .shards)
        }
    }
}
public extension ClusterInfo{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: ClusterInfoCodingKeys.self)
         try encoderContainer.encode(proxies, forKey: .proxies)
         try encoderContainer.encode(shards, forKey: .shards)
    }
}
