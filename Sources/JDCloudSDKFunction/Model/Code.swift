/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   
   

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  code
@objc(Code)
public class Code:NSObject,Codable{
    /// 代码压缩文件，base64编码
    var zipFile:String?
    /// 在线编辑代码
    var onlineCode:String?
    /// 代码所在对象存储的bucket名称
    var bucketName:String?
    /// 代码所在对象存储的object名称
    var objectName:String?



    public override init(){
            super.init()
    }

    enum CodeCodingKeys: String, CodingKey {
        case zipFile
        case onlineCode
        case bucketName
        case objectName
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: CodeCodingKeys.self)
        self.zipFile = try decoderContainer.decode(String?.self, forKey: .zipFile)
        self.onlineCode = try decoderContainer.decode(String?.self, forKey: .onlineCode)
        self.bucketName = try decoderContainer.decode(String?.self, forKey: .bucketName)
        self.objectName = try decoderContainer.decode(String?.self, forKey: .objectName)
    }
}
public extension Code{
    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: CodeCodingKeys.self)
         try encoderContainer.encode(zipFile, forKey: .zipFile)
         try encoderContainer.encode(onlineCode, forKey: .onlineCode)
         try encoderContainer.encode(bucketName, forKey: .bucketName)
         try encoderContainer.encode(objectName, forKey: .objectName)
    }
}
