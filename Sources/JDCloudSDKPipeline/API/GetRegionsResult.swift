/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Select options
   The api for user selected options

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

/// 可选地域
@objc(GetRegionsResult)
public class GetRegionsResult:NSObject,JdCloudResult
{
    /// 可选地域总数
    var totalCount:Int?

    /// 可选地域列表
    var regions:[NameLabelPair?]?



    public override init(){
        super.init()
    }

    enum GetRegionsResultCodingKeys: String, CodingKey {
        case totalCount
        case regions
    }

    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: GetRegionsResultCodingKeys.self)
        if decoderContainer.contains(.totalCount)
        {
            self.totalCount = try decoderContainer.decode(Int?.self, forKey: .totalCount)
        }
        if decoderContainer.contains(.regions)
        {
            self.regions = try decoderContainer.decode([NameLabelPair?]?.self, forKey: .regions)
        }
    }
}
public extension GetRegionsResult{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: GetRegionsResultCodingKeys.self)
        try encoderContainer.encode(totalCount, forKey: .totalCount)
        try encoderContainer.encode(regions, forKey: .regions)
    }
}
