/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   tools
   API OF tools Create|Update|Read|Delete|Execute

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

/// 上传文件，返回文件内容
@objc(ReadFileResult)
public class ReadFileResult:NSObject,JdCloudResult
{
    /// Result
    var result:Bool?

    /// Contents
    var contents:String?



    public override init(){
        super.init()
    }

    enum ReadFileResultCodingKeys: String, CodingKey {
        case result
        case contents
    }

    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: ReadFileResultCodingKeys.self)
        if decoderContainer.contains(.result)
        {
            self.result = try decoderContainer.decode(Bool?.self, forKey: .result)
        }
        if decoderContainer.contains(.contents)
        {
            self.contents = try decoderContainer.decode(String?.self, forKey: .contents)
        }
    }
}
public extension ReadFileResult{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: ReadFileResultCodingKeys.self)
        try encoderContainer.encode(result, forKey: .result)
        try encoderContainer.encode(contents, forKey: .contents)
    }
}
