/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Subscription
   订阅相关接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

/// 订阅列表
@objc(DescribeSubscriptionsResult)
public class DescribeSubscriptionsResult:NSObject,JdCloudResult
{
    /// Subscriptions
    var subscriptions:[Subscription?]?

    /// 订阅关系的总数
    var totalCount:Int?



    public override init(){
        super.init()
    }

    enum DescribeSubscriptionsResultCodingKeys: String, CodingKey {
        case subscriptions
        case totalCount
    }

    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: DescribeSubscriptionsResultCodingKeys.self)
        if decoderContainer.contains(.subscriptions)
        {
            self.subscriptions = try decoderContainer.decode([Subscription?]?.self, forKey: .subscriptions)
        }
        if decoderContainer.contains(.totalCount)
        {
            self.totalCount = try decoderContainer.decode(Int?.self, forKey: .totalCount)
        }
    }
}
public extension DescribeSubscriptionsResult{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: DescribeSubscriptionsResultCodingKeys.self)
        try encoderContainer.encode(subscriptions, forKey: .subscriptions)
        try encoderContainer.encode(totalCount, forKey: .totalCount)
    }
}
