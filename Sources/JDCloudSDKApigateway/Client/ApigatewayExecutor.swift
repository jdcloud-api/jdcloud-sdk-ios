/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Hu-Fu
   关于虎符的相关接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

///  查询api列表
public class QueryApisExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/apiGroups/{apiGroupId}/revision/{revision}/apis")
    }
    
}
///  创建api
public class CreateApisExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/apiGroups/{apiGroupId}/revision/{revision}/apis")
    }
    
}
///  创建API时，检查API名称是否重复,返回重复的apiId,如果没有返回空
public class CheckApiNameExistExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/apiGroups/{apiGroupId}/revision/{revision}/apis:checkApiNameExist")
    }
    
}
///  查询单个api
public class QueryApiExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/apiGroups/{apiGroupId}/revision/{revision}/apis/{apiId}")
    }
    
}
///  修改api
public class UpdateApiExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/apiGroups/{apiGroupId}/revision/{revision}/apis/{apiId}")
    }
    
}
///  删除api
public class DeleteApiExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/apiGroups/{apiGroupId}/revision/{revision}/apis/{apiId}")
    }
    
}
///  修改api
public class UpdateApiByNameExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/apiGroups/{apiGroupId}/revision/{revision}/apisName/{apiName}")
    }
    
}
///  删除api
public class DeleteApiByNameExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/apiGroups/{apiGroupId}/revision/{revision}/apisName/{apiName}")
    }
    
}
///  查询部署列表
public class DescribeDeploymentsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/apiGroups/{apiGroupId}/deployments")
    }
    
}
///  发布版本
public class DeployExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/apiGroups/{apiGroupId}/deployments")
    }
    
}
///  查询该版本的部署详情
public class DescribeDeploymentExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/apiGroups/{apiGroupId}/deployments/{deploymentId}")
    }
    
}
///  下线
public class OfflineExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/apiGroups/{apiGroupId}/deployments/{deploymentId}:offline")
    }
    
}
///  批量下线
public class BatchOfflineExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/apiGroups/{apiGroupId}/deployments:offline")
    }
    
}
///  查询流控策略列表
public class QueryRateLimitPoliciesExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/rateLimitPolicies")
    }
    
}
///  创建流控策略
public class CreateRateLimitPolicyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/rateLimitPolicies")
    }
    
}
///  检查策略名是否重复
public class CheckPolicyNameExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/regions/{regionId}/rateLimitPolicies:checkPolicyNameExist")
    }
    
}
///  查询单个流控策略
public class QueryRateLimitPolicyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/rateLimitPolicies/{policyId}")
    }
    
}
///  修改流控策略
public class UpdateRateLimitPolicyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/regions/{regionId}/rateLimitPolicies/{policyId}")
    }
    
}
///  删除单个流控策略
public class DeleteRateLimitPolicyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/rateLimitPolicies/{policyId}")
    }
    
}
///  查询绑定部署详情
public class QueryBindGroupPolicyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/rateLimitPolicies/{policyId}:bindGroup")
    }
    
}
///  绑定
public class BindGroupPolicyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/rateLimitPolicies/{policyId}:bindGroup")
    }
    
}
///  查询可绑定部署列表
public class QueryPolicyGroupListExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/rateLimitPolicies/{policyId}:groupList")
    }
    
}
///  开通后端配置
public class CreateBackendConfigExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/apiGroups/{apiGroupId}/backendConfig")
    }
    
}
///  查询指定环境下的所有后端配置
public class DescribeBackendConfigsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/apiGroups/{apiGroupId}/environment/{environment}/backendConfigs")
    }
    
}
///  查询backendConfig
public class DescribeBackendConfigExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/apiGroups/{apiGroupId}/backendConfig/{backendConfigId}")
    }
    
}
///  修改后端配置
public class UpdateBackendConfigExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/regions/{regionId}/apiGroups/{apiGroupId}/backendConfig/{backendConfigId}")
    }
    
}
///  删除后端配置
public class DeleteBackendConfigExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/apiGroups/{apiGroupId}/backendConfig/{backendConfigId}")
    }
    
}
///  查询修订版本列表
public class DescribeRevisionsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/apiGroups/{apiGroupId}/revision")
    }
    
}
///  创建修订版本
public class CreateRevisionExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/apiGroups/{apiGroupId}/revision")
    }
    
}
///  查询分组内全部修订版本号
public class GetRevisionIdsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/apiGroups/{apiGroupId}/revisions")
    }
    
}
///  检查版本号是否重复,返回重复的版本号,如果没有返回空
public class CheckRevisionExistExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/apiGroups/{apiGroupId}/revision:checkExist")
    }
    
}
///  查询某版本对应的api
public class QueryRevisionExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/apiGroups/{apiGroupId}/revision/{revisionId}")
    }
    
}
///  修改单个修订版本
public class ModifyRevisionExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/regions/{regionId}/apiGroups/{apiGroupId}/revision/{revisionId}")
    }
    
}
///  删除单个修订版本
public class DeleteRevisionExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/apiGroups/{apiGroupId}/revision/{revisionId}")
    }
    
}
///  查询密钥列表
public class QueryUcAccessKeysExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/ucAccessKeys")
    }
    
}
///  查询key列表
public class QueryKeysExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/kms")
    }
    
}
///  创建key
public class CreateKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/kms")
    }
    
}
///  重置key的acesskey和secretkey
public class ResetKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/kms")
    }
    
}
///  修改key信息
public class UpdateKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/regions/{regionId}/kms")
    }
    
}
///  查询key详情
public class QueryKeyInfoExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/kms/{keyId}")
    }
    
}
///  查询分组
public class DescribeApiGroupsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/apiGroups")
    }
    
}
///  创建API分组
public class CreateApiGroupExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/apiGroups")
    }
    
}
///  检查分组名称是否重复,返回重复的apiGroupId,如果没有返回空
public class CheckGroupNameExistExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/apiGroups:checkGroupNameExist")
    }
    
}
///  查询API分组详情
public class DescribeApiGroupExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/apiGroups/{apiGroupId}")
    }
    
}
///  修改API分组信息
public class ModifyApiGroupAttributeExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/apiGroups/{apiGroupId}")
    }
    
}
///  删除单个API分组
public class DeleteApiGroupExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/apiGroups/{apiGroupId}")
    }
    
}
///  查询分组
public class DescribeIsDeployApiGroupsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/apiGroups:isDeploy")
    }
    
}
///  查询domian列表
public class QueryUserDomainsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/userdomain")
    }
    
}
///  添加用户域名
public class CreateUserDomainExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/userdomain")
    }
    
}
///  删除用户域名接口
public class DeleteUserDomainExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/userdomain")
    }
    
}
///  查询密钥列表
public class QueryAccessKeysExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/accessKeys")
    }
    
}
///  创建密钥
public class CreateAccessKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/accessKeys")
    }
    
}
///  检查AccessKey是否重复
public class CheckKeyExistExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/accessKeys:checkAccessKeyExist")
    }
    
}
///  查询单个密钥
public class QueryAccessKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/accessKeys/{accessKeyId}")
    }
    
}
///  更新密钥
public class UpdateAccessKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/regions/{regionId}/accessKeys/{accessKeyId}")
    }
    
}
///  删除密钥
public class DeleteAccessKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/accessKeys/{accessKeyId}")
    }
    
}
///  查询绑定分组详情
public class QueryBindGroupKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/accessKeys/{accessKeyId}:bindGroup")
    }
    
}
///  绑定分组
public class BindGroupKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/accessKeys/{accessKeyId}:bindGroup")
    }
    
}
///  查询可绑定部署列表
public class QueryKeyGroupListExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/accessKeys/{accessKeyId}:groupList")
    }
    
}
///  查询访问授权列表
public class QueryAccessAuthsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/accessAuths")
    }
    
}
///  创建访问授权
public class CreateAccessAuthExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/accessAuths")
    }
    
}
///  检查accessAuth是否重复
public class CheckAuthExistExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/accessAuths:checkAccessKeyExist")
    }
    
}
///  查询单个访问授权
public class QueryAccessAuthExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/accessAuths/{accessAuthId}")
    }
    
}
///  更新访问授权
public class UpdateAccessAuthExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/regions/{regionId}/accessAuths/{accessAuthId}")
    }
    
}
///  删除访问授权
public class DeleteAccessAuthExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/accessAuths/{accessAuthId}")
    }
    
}
///  查询已绑定详情
public class QueryBindGroupAuthExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/accessAuths/{accessAuthId}:bindGroup")
    }
    
}
///  绑定分组
public class BindGroupAuthExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/accessAuths/{accessAuthId}:bindGroup")
    }
    
}
///  查询可绑定部署列表
public class QueryAuthGroupListExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/accessAuths:groupList")
    }
    
}
///  查询所有已授权api分组列表
public class AuthorizedApiGroupListExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/accessAuths:authorizedApiGroupList")
    }
    
}
///  校验pin是否存在
public class CheckPinExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/pins/{pin}:checkPin")
    }
    
}
///  查询密钥列表
public class QuerySubscriptionKeysExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/subscriptionKeys")
    }
    
}
///  创建密钥
public class CreateSubscriptionKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/subscriptionKeys")
    }
    
}
///  查询单个密钥
public class QuerySubscriptionKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/subscriptionKeys/{subscriptionKeyId}")
    }
    
}
///  更新密钥
public class UpdateSubscriptionKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/regions/{regionId}/subscriptionKeys/{subscriptionKeyId}")
    }
    
}
///  删除密钥
public class DeleteSubscriptionKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/subscriptionKeys/{subscriptionKeyId}")
    }
    
}
