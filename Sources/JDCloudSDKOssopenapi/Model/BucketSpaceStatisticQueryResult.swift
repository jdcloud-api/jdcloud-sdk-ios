/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   dosage monitoring openapi
   dosage monitoring openapi

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  bucketSpaceStatisticQueryResult
@objc(BucketSpaceStatisticQueryResult)
public class BucketSpaceStatisticQueryResult:NSObject,Codable{
    /// 查询结果总数
    var totalCount:Int?
    /// bucket 统计列表
    var queryList:[BucketSpaceStatistic?]?



    public override init(){
            super.init()
    }

    enum BucketSpaceStatisticQueryResultCodingKeys: String, CodingKey {
        case totalCount
        case queryList
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: BucketSpaceStatisticQueryResultCodingKeys.self)
        if decoderContainer.contains(.totalCount)
        {
            self.totalCount = try decoderContainer.decode(Int?.self, forKey: .totalCount)
        }
        if decoderContainer.contains(.queryList)
        {
            self.queryList = try decoderContainer.decode([BucketSpaceStatistic?]?.self, forKey: .queryList)
        }
    }
}
public extension BucketSpaceStatisticQueryResult{
    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: BucketSpaceStatisticQueryResultCodingKeys.self)
         try encoderContainer.encode(totalCount, forKey: .totalCount)
         try encoderContainer.encode(queryList, forKey: .queryList)
    }
}
