/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   original image protection openapi
   original image protection openapi

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  imageExtensions
@objc(ImageExtensions)
public class ImageExtensions:NSObject,Codable{
    /// 原图保护图像格式列表，符合固定XML格式，例如\&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;\&lt;Condition&gt;\&lt;Extension&gt;jpg\&lt;/Extension&gt;\&lt;/Condition&gt;
    /// Required:true
    var imageExtensionsValue:String



    public  init(imageExtensionsValue:String){
             self.imageExtensionsValue = imageExtensionsValue
    }

    enum ImageExtensionsCodingKeys: String, CodingKey {
        case imageExtensionsValue = "imageExtensions"
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: ImageExtensionsCodingKeys.self)
        self.imageExtensionsValue = try decoderContainer.decode(String.self, forKey: .imageExtensionsValue)
    }
}
public extension ImageExtensions{
    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: ImageExtensionsCodingKeys.self)
         try encoderContainer.encode(imageExtensionsValue, forKey: .imageExtensionsValue)
    }
}
