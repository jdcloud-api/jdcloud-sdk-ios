/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   EdgeManager
   edge管理模块

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  计算模块登记
@objc(ModuleEnrollRequest)
public class ModuleEnrollRequest:JdCloudRequest
{
    /// 待添加的设备编号
    var deviceId:String?

    /// 边缘计算模块名称
    var moduleId:String?

    /// 边缘计算模块类型编号
    var moduleTypeId:String?

    /// 边缘计算模块配置编号
    var moduleConfId:String?

    /// 是否立即部署[0-立即部署,1-暂不部署]
    var isDeploy:Int?

    /// 边缘计算节点编号
    var edgeId:String


    public init(regionId: String,edgeId:String){
        self.edgeId = edgeId
        super.init(regionId: regionId)
    }


    enum ModuleEnrollRequestRequestCodingKeys: String, CodingKey {
        case deviceId
        case moduleId
        case moduleTypeId
        case moduleConfId
        case isDeploy
        case edgeId
    }

    public override func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: ModuleEnrollRequestRequestCodingKeys.self)
        try encoderContainer.encode(deviceId, forKey: .deviceId)
        try encoderContainer.encode(moduleId, forKey: .moduleId)
        try encoderContainer.encode(moduleTypeId, forKey: .moduleTypeId)
        try encoderContainer.encode(moduleConfId, forKey: .moduleConfId)
        try encoderContainer.encode(isDeploy, forKey: .isDeploy)
        try encoderContainer.encode(edgeId, forKey: .edgeId)

    }
}
