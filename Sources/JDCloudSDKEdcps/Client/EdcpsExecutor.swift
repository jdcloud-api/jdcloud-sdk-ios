/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   分布式云物理服务器
   分布式云物理服务器地域操作相关的接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

///  查询别名IP列表
public class DescribeAliasIpsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/aliasIps")
    }
    
}
///  添加别名IP
public class CreateAliasIpExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/aliasIps")
    }
    
}
///  删除别名IP
public class DeleteAliasIpExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/aliasIps/{aliasIpId}")
    }
    
}
///  查询子网列表
public class DescribeSubnetsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/subnets")
    }
    
}
///  创建子网
public class CreateSubnetExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/subnets")
    }
    
}
///  查询子网详情
public class DescribeSubnetExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/subnets/{subnetId}")
    }
    
}
///  修改子网
public class ModifySubnetExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/subnets/{subnetId}")
    }
    
}
///  删除子网
public class DeleteSubnetExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/subnets/{subnetId}")
    }
    
}
///  查询弹性公网IP列表&lt;br/&gt;
      /// 支持分页查询，默认每页20条&lt;br/&gt;
      /// 
public class DescribeElasticIpsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/elasticIps")
    }
    
}
///  申请弹性公网IP
      /// 
public class ApplyElasticIpsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/elasticIps")
    }
    
}
///  查询弹性公网IP详情
public class DescribeElasticIpExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/elasticIps/{elasticIpId}")
    }
    
}
///  删除弹性公网IP
      /// 
public class DeleteelasticIpExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/elasticIps/{elasticIpId}")
    }
    
}
///  修改弹性公网IP带宽
      /// 
public class ModifyElasticIpBandwidthExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/elasticIps/{elasticIpId}:modifyElasticIpBandwidth")
    }
    
}
///  查询弹性公网IP库存
public class DescribeElasticIpStockExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/elasticIpStock")
    }
    
}
///  查询链路类型列表
public class DescribeLineTypesExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/lineTypes")
    }
    
}
///  查询密钥对列表
public class DescribeKeypairsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/keypairs")
    }
    
}
///  创建密钥对
public class CreateKeypairsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/keypairs")
    }
    
}
///  导入密钥对
public class ImportKeypairsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/keypairs:import")
    }
    
}
///  查询密钥对详情
public class DescribeKeypairExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/keypairs/{keypairId}")
    }
    
}
///  删除密钥对
public class DeleteKeypairsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/keypairs/{keypairId}")
    }
    
}
///  查询次要CIDR列表
public class DescribeSecondaryCidrsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/secondaryCidrs")
    }
    
}
///  添加次要CIDR
public class CreateSecondaryCidrExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/secondaryCidrs")
    }
    
}
///  删除次要CIDR
public class DeleteSecondaryCidrExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/secondaryCidrs/{secondaryCidrId}")
    }
    
}
///  查询分布式云物理服务器实例类型
public class DescribeDeviceTypesExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/deviceTypes")
    }
    
}
///  查询分布式云物理服务器支持的操作系统
public class DescribeOSExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/os")
    }
    
}
///  查询某种实例类型的分布式云物理服务器支持的RAID类型，可查询系统盘RAID类型和数据盘RAID类型
public class DescribeDeviceRaidsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/raids")
    }
    
}
///  查询分布式云物理服务器库存
public class DescribeDeviceStockExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/deviceStock")
    }
    
}
///  查询单台分布式云物理服务器详细信息
public class DescribeInstanceExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}")
    }
    
}
///  删除单台云物理物理服务器，只能删除运行running、停止stopped、错误error状态的服务器&lt;br/&gt;
      /// 不能删除没有计费信息的服务器&lt;br/&gt;
      /// 
public class DeleteInstanceExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/instances/{instanceId}")
    }
    
}
///  批量查询分布式云物理服务器详细信息&lt;br/&gt;
      /// 支持分页查询，默认每页20条&lt;br/&gt;
      /// 
public class DescribeInstancesExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances")
    }
    
}
///  创建一台或多台指定配置的分布式云物理服务器&lt;br/&gt;
      /// - 地域与可用区&lt;br/&gt;
      ///   - 调用接口（queryEdCPSRegions）获取分布式云物理服务器支持的地域与可用区&lt;br/&gt;
      /// - 实例类型&lt;br/&gt;
      ///   - 调用接口（describeDeviceTypes）获取物理实例类型列表&lt;br/&gt;
      ///   - 不能使用已下线、或已售馨的实例类型&lt;br/&gt;
      /// - 操作系统&lt;br/&gt;
      ///   - 可调用接口（describeOS）获取分布式云物理服务器支持的操作系统列表&lt;br/&gt;
      /// - 存储&lt;br/&gt;
      ///   - 数据盘多种RAID可选，可调用接口（describeDeviceRaids）获取服务器支持的RAID列表&lt;br/&gt;
      /// - 网络&lt;br/&gt;
      ///   - 网络类型目前支持vpc&lt;br/&gt;
      ///   - 线路目前支持联通un、电信ct、移动cm&lt;br/&gt;
      ///   - 支持不启用外网，如果启用外网，带宽范围[1,200] 单位Mbps&lt;br/&gt;
      /// - 其他&lt;br/&gt;
      ///   - 购买时长，可按年或月购买：月取值范围[1,9], 年取值范围[1,3]&lt;br/&gt;
      ///   - 密码设置参考公共参数规范&lt;br/&gt;
      /// 
public class CreateInstancesExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/instances")
    }
    
}
///  查询分布式云物理服务器名称
public class DescribeInstanceNameExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}:describeInstanceName")
    }
    
}
///  修改分布式云物理服务器部分信息，包括名称、描述
public class ModifyInstanceExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}:modifyInstance")
    }
    
}
///  查询单个分布式云物理服务器已安装的RAID信息，包括系统盘RAID信息和数据盘RAID信息
public class DescribeInstanceRaidExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}:describeInstanceRaid")
    }
    
}
///  查询单个分布式云物理服务器硬件监控信息
public class DescribeInstanceStatusExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}:describeInstanceStatus")
    }
    
}
///  重启单台分布式云物理服务器，只能重启running状态的服务器 [MFA enabled]
public class RestartInstanceExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/instances/{instanceId}:restartInstance")
    }
    
}
///  对单台分布式云物理服务器执行关机操作，只能停止running状态的服务器 [MFA enabled]
public class StopInstanceExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/instances/{instanceId}:stopInstance")
    }
    
}
///  对单台分布式云物理服务器执行开机操作，只能启动stopped状态的服务器
public class StartInstanceExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/instances/{instanceId}:startInstance")
    }
    
}
///  重装分布式云物理服务器，只能重装stopped状态的服务器&lt;br/&gt;
      /// - 可调用接口（describeOS）获取分布式云物理服务器支持的操作系统列表
      ///  [MFA enabled]
public class ReinstallInstanceExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/instances/{instanceId}:reinstallInstance")
    }
    
}
///  绑定弹性公网IP
      /// 
public class AssociateElasticIpExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/instances/{instanceId}:associateElasticIp")
    }
    
}
///  解绑弹性公网IP
      /// 
public class DisassociateElasticIpExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/instances/{instanceId}:disassociateElasticIp")
    }
    
}
///  重置分布式云物理服务器密码
      /// 
public class ResetPasswordExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/instances/{instanceId}:resetPassword")
    }
    
}
///  查询可用的私有IP列表
public class DescribeAvailablePrivateIpExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}/availablePrivateIps")
    }
    
}
///  查询私有网络详情
public class DescribeVpcExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/vpcs/{vpcId}")
    }
    
}
///  修改私有网络
      /// 
public class ModifyVpcExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/vpcs/{vpcId}")
    }
    
}
///  删除私有网络
      /// 
public class DeleteVpcExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/vpcs/{vpcId}")
    }
    
}
///  查询私有网络列表
public class DescribeVpcsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/vpcs")
    }
    
}
///  创建私有网络
public class CreateVpcExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/vpcs")
    }
    
}
///  查询分布式分布式云物理服务器地域列表
public class DescribeEdCPSRegionsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/edgeRegions")
    }
    
}
