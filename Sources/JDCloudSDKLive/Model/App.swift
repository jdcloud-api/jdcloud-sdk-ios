/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   
   

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  app
@objc(App)
public class App:NSObject,Codable{
    /// 推流域名
    var publishDomain:String?
    /// config
    var transcodeConfig:[Config?]?



    public override init(){
            super.init()
    }

    enum AppCodingKeys: String, CodingKey {
        case publishDomain
        case transcodeConfig
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: AppCodingKeys.self)
        if decoderContainer.contains(.publishDomain)
        {
            self.publishDomain = try decoderContainer.decode(String?.self, forKey: .publishDomain)
        }
        if decoderContainer.contains(.transcodeConfig)
        {
            self.transcodeConfig = try decoderContainer.decode([Config?]?.self, forKey: .transcodeConfig)
        }
    }
}
public extension App{
    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: AppCodingKeys.self)
         try encoderContainer.encode(publishDomain, forKey: .publishDomain)
         try encoderContainer.encode(transcodeConfig, forKey: .transcodeConfig)
    }
}
