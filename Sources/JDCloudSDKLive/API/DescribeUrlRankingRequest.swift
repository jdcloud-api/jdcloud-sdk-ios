/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Live-Video
   直播管理API

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  查询URL播放排行
@objc(DescribeUrlRankingRequest)
public class DescribeUrlRankingRequest:JdCloudRequest
{
    /// 播放域名
    var domainName:String

    /// 查询Top数量，默认20，即返回Top20的数据
    var size:Int?

    /// 排行依据字段，取值：[&quot;pv&quot;, &quot;flow&quot;, &quot;bandwidth&quot;]，默认pv
      /// - pv 播放次数
      /// - flow 流量
      /// - bandwidth 带宽
      /// 
    var rankfield:String?

    /// 起始时间
      /// - UTC时间
      ///   格式:yyyy-MM-dd&#39;T&#39;HH:mm:ss&#39;Z&#39;
      ///   示例:2018-10-21T10:00:00Z
      /// 
    var startTime:String

    /// 结束时间:
      /// - UTC时间
      ///   格式:yyyy-MM-dd&#39;T&#39;HH:mm:ss&#39;Z&#39;
      ///   示例:2018-10-21T10:00:00Z
      /// - 为空,默认为当前时间
      /// 
    var endTime:String?


    public init(regionId: String,domainName:String,startTime:String){
        self.domainName = domainName
        self.startTime = startTime
        super.init(regionId: regionId)
    }


    enum DescribeUrlRankingRequestRequestCodingKeys: String, CodingKey {
        case domainName
        case size
        case rankfield
        case startTime
        case endTime
    }

    public override func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: DescribeUrlRankingRequestRequestCodingKeys.self)
        try encoderContainer.encode(domainName, forKey: .domainName)
        try encoderContainer.encode(size, forKey: .size)
        try encoderContainer.encode(rankfield, forKey: .rankfield)
        try encoderContainer.encode(startTime, forKey: .startTime)
        try encoderContainer.encode(endTime, forKey: .endTime)

    }
}
