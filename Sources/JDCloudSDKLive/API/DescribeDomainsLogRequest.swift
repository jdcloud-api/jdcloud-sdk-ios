/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Live-Video
   直播管理API

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  日志下载
@objc(DescribeDomainsLogRequest)
public class DescribeDomainsLogRequest:JdCloudRequest
{
    /// 播放域名，多个时以逗号（,）分隔
    var domains:String

    /// 时间间隔，取值(hour，day),不传默认小时
      /// - 按小时（hour）下载时是.log文件
      /// - 按天（day）下载时是.zip文件
      /// 
    var interval:String?

    /// 起始时间
      /// - UTC时间
      ///   格式:yyyy-MM-dd&#39;T&#39;HH:mm:ss&#39;Z&#39;
      ///   示例:2018-10-21T10:00:00Z
      /// 
    var startTime:String

    /// 结束时间:
      /// - UTC时间
      ///   格式:yyyy-MM-dd&#39;T&#39;HH:mm:ss&#39;Z&#39;
      ///   示例:2018-10-21T10:00:00Z
      /// - 为空,默认为当前时间
      /// 
    var endTime:String?


    public init(regionId: String,domains:String,startTime:String){
        self.domains = domains
        self.startTime = startTime
        super.init(regionId: regionId)
    }


    enum DescribeDomainsLogRequestRequestCodingKeys: String, CodingKey {
        case domains
        case interval
        case startTime
        case endTime
    }

    public override func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: DescribeDomainsLogRequestRequestCodingKeys.self)
        try encoderContainer.encode(domains, forKey: .domains)
        try encoderContainer.encode(interval, forKey: .interval)
        try encoderContainer.encode(startTime, forKey: .startTime)
        try encoderContainer.encode(endTime, forKey: .endTime)

    }
}
