/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Live-Video
   直播管理API

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  添加打点录制任务
      ///       /// - 您可以调用此接口精确提取已录制的文件中所需要的部分
      ///       /// 
@objc(AddLiveRecordTaskRequest)
public class AddLiveRecordTaskRequest:JdCloudRequest
{
    /// 录制时间集合
      /// - 最大支持10段,多段合并成一个文件
      /// - 多段时间跨度最小不能小于10s
      /// - 多段时间跨度最大不能超过8小时
      /// 
    var recordTimes:[RecordTime?]?

    /// 存储桶
    var saveBucket:String

    /// 存储地址
    var saveEndpoint:String

    /// 录制文件类型:
      /// - 取值: ts,flv,mp4 (多种类型之前用;隔开)
      /// - 不区分大小写
      /// 
    var recordFileType:String

    /// 录制文件存储路径:
      /// - 默认地址: record/{Date}/{ServerId}/{AppName}/{StreamName}/{StartTime}_{EndTime}
      /// 
    var saveObject:String?

    /// 打点录制任务外键
      /// 
    var taskExternalId:String?

    /// 推流域名
    var publishDomain:String

    /// 应用名称
    var appName:String

    /// 流名称
    var streamName:String


    public init(regionId: String,recordTimes:[RecordTime?]?,saveBucket:String,saveEndpoint:String,recordFileType:String,publishDomain:String,appName:String,streamName:String){
        self.recordTimes = recordTimes
        self.saveBucket = saveBucket
        self.saveEndpoint = saveEndpoint
        self.recordFileType = recordFileType
        self.publishDomain = publishDomain
        self.appName = appName
        self.streamName = streamName
        super.init(regionId: regionId)
    }


    enum AddLiveRecordTaskRequestRequestCodingKeys: String, CodingKey {
        case recordTimes
        case saveBucket
        case saveEndpoint
        case recordFileType
        case saveObject
        case taskExternalId
        case publishDomain
        case appName
        case streamName
    }

    public override func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: AddLiveRecordTaskRequestRequestCodingKeys.self)
        try encoderContainer.encode(recordTimes, forKey: .recordTimes)
        try encoderContainer.encode(saveBucket, forKey: .saveBucket)
        try encoderContainer.encode(saveEndpoint, forKey: .saveEndpoint)
        try encoderContainer.encode(recordFileType, forKey: .recordFileType)
        try encoderContainer.encode(saveObject, forKey: .saveObject)
        try encoderContainer.encode(taskExternalId, forKey: .taskExternalId)
        try encoderContainer.encode(publishDomain, forKey: .publishDomain)
        try encoderContainer.encode(appName, forKey: .appName)
        try encoderContainer.encode(streamName, forKey: .streamName)

    }
}
