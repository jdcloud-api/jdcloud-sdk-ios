/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   IP Sets
   IP 黑白名单库, 预定义的 IP 黑白名单绑定到转发规则的黑名单或白名单后生效

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

///  查询某个实例下的网站类规则
public class DescribeWebRulesExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}/webRules")
    }
    
}
///  添加网站类规则
public class CreateWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/webRules")
    }
    
}
///  查询网站类规则
public class DescribeWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}")
    }
    
}
///  修改网站类规则
public class ModifyWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}")
    }
    
}
///  删除网站规则。支持批量操作, 批量操作时 webRuleId 传多个, 以 &#39;,&#39; 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败
public class DeleteWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}")
    }
    
}
///  网站类规则切换成防御状态
public class SwitchWebRuleProtectExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}:protect")
    }
    
}
///  网站类规则切换成回源状态
public class SwitchWebRuleOriginExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}:origin")
    }
    
}
///  网站类规则开启 CC 防护, 开启后网站类规则已配置的防护规则和 CC 防护配置生效, 若没有配置过 CC 防护, 默认的 CC 防护配置生效。支持批量操作, 批量操作时 webRuleId 传多个, 以 &#39;,&#39; 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败
public class EnableWebRuleCCExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}:enableCC")
    }
    
}
///  关闭网站类规则 CC 防护, 网站类规则的 CC 防护规则和 CC 防护配置失效。支持批量操作, 批量操作时 webRuleId 传多个, 以 &#39;,&#39; 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败
public class DisableWebRuleCCExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}:disableCC")
    }
    
}
///  开启网站类规则 CC 观察者模式, 观察模式下，CC 防护只告警不防御。支持批量操作, 批量操作时 webRuleId 传多个, 以 &#39;,&#39; 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败
public class EnableWebRuleCCObserverModeExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}:enableCCObserverMode")
    }
    
}
///  关闭网站类规则 CC 观察者模式, 观察模式下, CC 防护只告警不防御。支持批量操作, 批量操作时 webRuleId 传多个, 以 &#39;,&#39; 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败
public class DisableWebRuleCCObserverModeExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}:disableCCObserverMode")
    }
    
}
///  查询网站类规则的 CC 防护规则列表
public class DescribeCCProtectionRulesOfWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}/ccProtectionRules")
    }
    
}
///  添加网站类规则的 CC 防护规则
public class CreateCCProtectionRuleOfWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}/ccProtectionRules")
    }
    
}
///  查询网站类规则的 CC 防护规则
public class DescribeCCProtectionRuleOfWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}/ccProtectionRules/{ccProtectionRuleId}")
    }
    
}
///  修改网站类规则的 CC 防护规则
public class ModifyCCProtectionRuleOfWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}/ccProtectionRules/{ccProtectionRuleId}")
    }
    
}
///  删除网站规则的 CC 防护规则
public class DeleteCCProtectionRuleOfWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}/ccProtectionRules/{ccProtectionRuleId}")
    }
    
}
///  开启网站类规则的 CC 防护规则
public class EnableCCProtectionRuleOfWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}/ccProtectionRules/{ccProtectionRuleId}:enable")
    }
    
}
///  关闭网站类规则的 CC 防护规则
public class DisableCCProtectionRuleOfWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}/ccProtectionRules/{ccProtectionRuleId}:disable")
    }
    
}
///  查询网站类规则的 CC 防护配置
public class DescribeCCProtectionConfigOfWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}:ccProtectionConfig")
    }
    
}
///  修改网站类规则的 CC 防护配置
public class ModifyCCProtectionConfigOfWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}:ccProtectionConfig")
    }
    
}
///  查询网站类规则的 CC 防护默认配置
public class DescribeCCProtectionDefaultConfigOfWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}:ccProtectionDefaultConfig")
    }
    
}
///  编辑网站规则证书信息
public class ModifyCertInfoExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}:modifyCertInfo")
    }
    
}
///  查询网站类防护规则的黑名单用量信息
public class DescribeWebRuleBlackListUsageExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}:describeWebRuleBlackListUsage")
    }
    
}
///  查询网站类规则的黑名单规则列表
public class DescribeBlackListRulesOfWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}/webBlackListRules")
    }
    
}
///  添加网站类规则的黑名单规则
public class CreateBlackListRuleOfWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}/webBlackListRules")
    }
    
}
///  查询网站类规则的黑名单规则
public class DescribeBlackListRuleOfWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}/webBlackListRules/{webBlackListRuleId}")
    }
    
}
///  修改网站类规则的黑名单规则
public class ModifyBlackListRuleOfWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}/webBlackListRules/{webBlackListRuleId}")
    }
    
}
///  删除网站类规则的黑名单规则, 批量操作时 webBlackListRuleId 传多个, 以 &#39;,&#39; 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败
public class DeleteBlackListRuleOfWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}/webBlackListRules/{webBlackListRuleId}")
    }
    
}
///  开启网站类规则的黑名单
public class EnableWebRuleBlackListExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}:enableWebRuleBlackList")
    }
    
}
///  开启网站类规则的黑名单规则, 批量操作时 webBlackListRuleId 传多个, 以 &#39;,&#39; 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败
public class EnableBlackListRuleOfWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}/webBlackListRules/{webBlackListRuleId}:enable")
    }
    
}
///  关闭网站类规则的黑名单
public class DisableWebRuleBlackListExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}:disableWebRuleBlackList")
    }
    
}
///  关闭网站类规则的黑名单规则, 批量操作时 webBlackListRuleId 传多个, 以 &#39;,&#39; 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败
public class DisableBlackListRuleOfWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}/webBlackListRules/{webBlackListRuleId}:disable")
    }
    
}
///  查询网站类防护规则的白名单用量信息
public class DescribeWebRuleWhiteListUsageExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}:describeWebRuleWhiteListUsage")
    }
    
}
///  查询网站类规则的白名单规则列表
public class DescribeWhiteListRulesOfWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}/webWhiteListRules")
    }
    
}
///  添加网站类规则的白名单规则
public class CreateWhiteListRuleOfWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}/webWhiteListRules")
    }
    
}
///  查询网站类规则的白名单规则
public class DescribeWhiteListRuleOfWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}/webWhiteListRules/{webWhiteListRuleId}")
    }
    
}
///  修改网站类规则的白名单规则
public class ModifyWhiteListRuleOfWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}/webWhiteListRules/{webWhiteListRuleId}")
    }
    
}
///  删除网站类规则的白名单规则, 批量操作时 webWhiteListRuleId 传多个, 以 &#39;,&#39; 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败
public class DeleteWhiteListRuleOfWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}/webWhiteListRules/{webWhiteListRuleId}")
    }
    
}
///  开启网站类规则的白名单
public class EnableWebRuleWhiteListExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}:enableWebRuleWhiteList")
    }
    
}
///  开启网站类规则的白名单规则, 批量操作时 webWhiteListRuleId 传多个, 以 &#39;,&#39; 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败
public class EnableWhiteListRuleOfWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}/webWhiteListRules/{webWhiteListRuleId}:enable")
    }
    
}
///  关闭网站类规则的白名单
public class DisableWebRuleWhiteListExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}:disableWebRuleWhiteList")
    }
    
}
///  关闭网站类规则的白名单规则, 批量操作时 webWhiteListRuleId 传多个, 以 &#39;,&#39; 分隔, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败
public class DisableWhiteListRuleOfWebRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/webRules/{webRuleId}/webWhiteListRules/{webWhiteListRuleId}:disable")
    }
    
}
///  查询网站类转发规则 Geo 模式的黑名单可设置区域编码
public class DescribeWebRuleBlackListGeoAreasExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/describeWebRuleBlackListGeoAreas")
    }
    
}
///  查询网站类转发规则 Geo 模式的白名单可设置区域编码
public class DescribeWebRuleWhiteListGeoAreasExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/describeWebRuleWhiteListGeoAreas")
    }
    
}
///  查询某个实例下的非网站转发配置
public class DescribeForwardRulesExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}/forwardRules")
    }
    
}
///  添加非网站类规则
public class CreateForwardRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/forwardRules")
    }
    
}
///  查询非网站类规则
public class DescribeForwardRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}/forwardRules/{forwardRuleId}")
    }
    
}
///  更新非网站类规则
public class ModifyForwardRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/regions/{regionId}/instances/{instanceId}/forwardRules/{forwardRuleId}")
    }
    
}
///  删除非网站规则, 批量操作时, 返回 result.code 为 1 表示操作成功, 为 0 时可能全部失败, 也可能部分失败
public class DeleteForwardRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/instances/{instanceId}/forwardRules/{forwardRuleId}")
    }
    
}
///  非网站类规则切换成防御状态
public class SwitchForwardRuleProtectExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/forwardRules/{forwardRuleId}:protect")
    }
    
}
///  非网站类规则切换成回源状态
public class SwitchForwardRuleOriginExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/forwardRules/{forwardRuleId}:origin")
    }
    
}
///  查询非网站类转发规则的防护规则
public class DescribeProtectionRuleOfForwardRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}/forwardRules/{forwardRuleId}:describeProtectionRule")
    }
    
}
///  修改非网站类转发规则的防护规则
public class ModifyProtectionRuleOfForwardRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/forwardRules/{forwardRuleId}:modifyProtectionRule")
    }
    
}
///  查询非网站类转发规则的防护规则 Geo 拦截可设置区域编码
public class DescribeGeoAreasExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/describeGeoAreas")
    }
    
}
///  查询转发规则的黑名单规则
public class DescribeBlackListRuleOfForwardRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}/forwardRules/{forwardRuleId}/forwardBlackListRule")
    }
    
}
///  修改转发规则的黑名单规则
public class ModifyBlackListRuleOfForwardRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/regions/{regionId}/instances/{instanceId}/forwardRules/{forwardRuleId}/forwardBlackListRule")
    }
    
}
///  开启转发规则的黑名单规则
public class EnableBlackListRuleOfForwardRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/forwardRules/{forwardRuleId}:enableBlackListRuleOfForwardRule")
    }
    
}
///  关闭转发规则的黑名单规则
public class DisableBlackListRuleOfForwardRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/forwardRules/{forwardRuleId}:disableBlackListRuleOfForwardRule")
    }
    
}
///  查询转发规则的白名单规则
public class DescribeWhiteListRuleOfForwardRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}/forwardRules/{forwardRuleId}/forwardWhiteListRule")
    }
    
}
///  修改转发规则的白名单规则
public class ModifyWhiteListRuleOfForwardRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/regions/{regionId}/instances/{instanceId}/forwardRules/{forwardRuleId}/forwardWhiteListRule")
    }
    
}
///  开启转发规则的白名单规则
public class EnableWhiteListRuleOfForwardRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/forwardRules/{forwardRuleId}:enableWhiteListRuleOfForwardRule")
    }
    
}
///  关闭转发规则的白名单规则
public class DisableWhiteListRuleOfForwardRuleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/forwardRules/{forwardRuleId}:disableWhiteListRuleOfForwardRule")
    }
    
}
///  查询 DDoS 攻击日志
public class DescribeDDoSAttackLogsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/attacklog:describeDDoSAttackLogs")
    }
    
}
///  查询 CC 攻击日志
public class DescribeCCAttackLogsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/attacklog:describeCCAttackLogs")
    }
    
}
///  查询 CC 攻击日志详情.
      /// - 参数 attackId 优先级高于 instanceId, attackId 不为空时, 忽略 instanceId
      /// 
public class DescribeCCAttackLogDetailsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/attacklog:describeCCAttackLogDetails")
    }
    
}
///  查询攻击次数及流量峰值
public class DescribeAttackStatisticsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/attacklog:describeAttackStatistics")
    }
    
}
///  查询各类型攻击次数
public class DescribeAttackTypeCountExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/attacklog:describeAttackTypeCount")
    }
    
}
///  查询实例列表
public class DescribeInstancesExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances")
    }
    
}
///  新购或升级高防实例
public class CreateInstanceExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances")
    }
    
}
///  查询实例
public class DescribeInstanceExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}")
    }
    
}
///  修改实例名称
public class ModifyInstanceNameExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}:rename")
    }
    
}
///  更新实例弹性防护带宽
public class ModifyEPBExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}:modifyEPB")
    }
    
}
///  查询告警配置
public class DescribeAlarmConfigExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}:describeAlarmConfig")
    }
    
}
///  更新告警配置
public class ModifyAlarmConfigExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}:modifyAlarmConfig")
    }
    
}
///  查询高防实例名称列表
public class DescribeNameListExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/describeNameList")
    }
    
}
///  查询高防实例防护统计信息
public class DescribeProtectionStatisticsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/describeProtectionStatistics")
    }
    
}
///  检测实例名称是否合法
public class CheckNameExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/checkName")
    }
    
}
///  查询用户可设置为网站类规则回源 IP 的京东云云内弹性公网 IP 资源
public class DescribeVpcIpListExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/describeVpcIpList")
    }
    
}
///  查询用户可设置为网站类规则回源 IP 的京东云云物理服务器公网 IP 资源
public class DescribeCpsIpListExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/cpsIpResources")
    }
    
}
///  DDos 防护流量报表
public class DescribeDDoSGraphExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/charts:DDoSGraph")
    }
    
}
///  转发流量报表
public class DescribeFwdGraphExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/charts:fwdGraph")
    }
    
}
///  CC 防护流量报表
public class DescribeCCGraphExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/charts:CCGraph")
    }
    
}
///  查询实例的 IP 黑白名单库列表
public class DescribeIpSetsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}/ipSets")
    }
    
}
///  添加实例的 IP 黑白名单, 预定义的 IP 黑白名单绑定到转发规则的黑名单或白名单后生效
public class CreateIpSetExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/instances/{instanceId}/ipSets")
    }
    
}
///  查询实例的 IP 黑白名单
public class DescribeIpSetExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}/ipSets/{ipSetId}")
    }
    
}
///  删除实例的 IP 黑白名单. 支持批量操作, 批量操作时 ipSetId 传多个, 以 &#39;,&#39; 分隔. IP 黑白名单规则被引用时不允许删除
public class DeleteIpSetExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/instances/{instanceId}/ipSets/{ipSetId}")
    }
    
}
///  查询实例的 IP 黑白名单用量信息
public class DescribeIpSetUsageExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/instances/{instanceId}:describeIpSetUsage")
    }
    
}
