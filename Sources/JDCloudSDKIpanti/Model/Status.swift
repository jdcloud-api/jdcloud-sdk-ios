/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   
   

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  status
@objc(Status)
public class Status:NSObject,Codable{
    /// 请求结果, 0 表示成功, 非 0 表示失败
    var retcode:Int?
    /// 请求错误码
    var code:Int?
    /// 请求错误消息
    var msg:String?



    public override init(){
            super.init()
    }

    enum StatusCodingKeys: String, CodingKey {
        case retcode
        case code
        case msg
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: StatusCodingKeys.self)
        if decoderContainer.contains(.retcode)
        {
            self.retcode = try decoderContainer.decode(Int?.self, forKey: .retcode)
        }
        if decoderContainer.contains(.code)
        {
            self.code = try decoderContainer.decode(Int?.self, forKey: .code)
        }
        if decoderContainer.contains(.msg)
        {
            self.msg = try decoderContainer.decode(String?.self, forKey: .msg)
        }
    }
}
public extension Status{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: StatusCodingKeys.self)
         try encoderContainer.encode(retcode, forKey: .retcode)
         try encoderContainer.encode(code, forKey: .code)
         try encoderContainer.encode(msg, forKey: .msg)
    }
}
