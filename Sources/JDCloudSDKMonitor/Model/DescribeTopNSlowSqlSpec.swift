/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   
   

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  describeTopNSlowSqlSpec
@objc(DescribeTopNSlowSqlSpec)
public class DescribeTopNSlowSqlSpec:NSObject,Codable{
    /// 查询时间范围的结束时间， UTC时间，格式：2016-12- yyyy-MM-dd&#39;T&#39;HH:mm:ssZ（为空时，将由startTime与timeInterval计算得出）
      /// in: query
    var endTime:String?
    /// 资源的uuid
    /// Required:true
    var resourceId:String
    /// 资源的类型,sqlserver
    /// Required:true
    var serviceCode:String
    /// 查询时间范围的开始时间， UTC时间，格式：yyyy-MM-dd&#39;T&#39;HH:mm:ssZ（默认为当前时间，早于30d时，将被重置为30d）
      /// in: query
    var startTime:String?
    /// 时间间隔：1h，6h，12h，1d，3d，7d，14d，固定时间间隔，timeInterval 与 endTime 至少填一项
      /// in: query
    var timeInterval:String?
    /// topN数量
    /// Required:true
    var topN:Int64



    public  init(resourceId:String,serviceCode:String,topN:Int64){
             self.resourceId = resourceId
             self.serviceCode = serviceCode
             self.topN = topN
    }

    enum DescribeTopNSlowSqlSpecCodingKeys: String, CodingKey {
        case endTime
        case resourceId
        case serviceCode
        case startTime
        case timeInterval
        case topN
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: DescribeTopNSlowSqlSpecCodingKeys.self)
        if decoderContainer.contains(.endTime)
        {
            self.endTime = try decoderContainer.decode(String?.self, forKey: .endTime)
        }
        self.resourceId = try decoderContainer.decode(String.self, forKey: .resourceId)
        self.serviceCode = try decoderContainer.decode(String.self, forKey: .serviceCode)
        if decoderContainer.contains(.startTime)
        {
            self.startTime = try decoderContainer.decode(String?.self, forKey: .startTime)
        }
        if decoderContainer.contains(.timeInterval)
        {
            self.timeInterval = try decoderContainer.decode(String?.self, forKey: .timeInterval)
        }
        self.topN = try decoderContainer.decode(Int64.self, forKey: .topN)
    }
}
public extension DescribeTopNSlowSqlSpec{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: DescribeTopNSlowSqlSpecCodingKeys.self)
         try encoderContainer.encode(endTime, forKey: .endTime)
         try encoderContainer.encode(resourceId, forKey: .resourceId)
         try encoderContainer.encode(serviceCode, forKey: .serviceCode)
         try encoderContainer.encode(startTime, forKey: .startTime)
         try encoderContainer.encode(timeInterval, forKey: .timeInterval)
         try encoderContainer.encode(topN, forKey: .topN)
    }
}
