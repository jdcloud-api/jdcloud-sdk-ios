/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Monitoring Rules APIs
   云监控规则相关接口，提供创建、查询、修改、删除监控规则等功能

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

/// 创建报警规则，可以为某一个实例创建报警规则，也可以为多个实例同时创建报警规则。
@objc(CreateAlarmResult)
public class CreateAlarmResult:NSObject,JdCloudResult
{
    /// 创建成功的规则id列表
    var alarmIdList:[String?]?



    public override init(){
        super.init()
    }

    enum CreateAlarmResultCodingKeys: String, CodingKey {
        case alarmIdList
    }

    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: CreateAlarmResultCodingKeys.self)
        if decoderContainer.contains(.alarmIdList)
        {
            self.alarmIdList = try decoderContainer.decode([String?]?.self, forKey: .alarmIdList)
        }
    }
}
public extension CreateAlarmResult{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: CreateAlarmResultCodingKeys.self)
        try encoderContainer.encode(alarmIdList, forKey: .alarmIdList)
    }
}
