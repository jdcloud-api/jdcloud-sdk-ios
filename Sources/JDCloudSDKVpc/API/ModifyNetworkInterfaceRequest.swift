/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   弹性网卡
   弹性网卡相关接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  修改弹性网卡接口
@objc(ModifyNetworkInterfaceRequest)
public class ModifyNetworkInterfaceRequest:JdCloudRequest
{
    /// 弹性网卡名称,只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符
    var networkInterfaceName:String?

    /// 描述,允许输入UTF-8编码下的全部字符，不超过256字符
    var descriptionValue:String?

    /// 以覆盖原有安全组的方式更新的安全组。如果更新安全组ID列表，最多5个安全组
    var securityGroups:[String?]?

    /// networkInterface ID
    var networkInterfaceId:String


    public init(regionId: String,networkInterfaceId:String){
        self.networkInterfaceId = networkInterfaceId
        super.init(regionId: regionId)
    }


    enum ModifyNetworkInterfaceRequestRequestCodingKeys: String, CodingKey {
        case networkInterfaceName
        case descriptionValue = "description"
        case securityGroups
        case networkInterfaceId
    }

    public override func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: ModifyNetworkInterfaceRequestRequestCodingKeys.self)
        try encoderContainer.encode(networkInterfaceName, forKey: .networkInterfaceName)
        try encoderContainer.encode(descriptionValue, forKey: .descriptionValue)
        try encoderContainer.encode(securityGroups, forKey: .securityGroups)
        try encoderContainer.encode(networkInterfaceId, forKey: .networkInterfaceId)

    }
}
