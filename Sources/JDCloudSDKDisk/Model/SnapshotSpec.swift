/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   
   

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  snapshotSpec
@objc(SnapshotSpec)
public class SnapshotSpec:NSObject,Codable{
    /// 快照名称
    /// Required:true
    var name:String
    /// 快照描述
    var descriptionValue:String?
    /// 用于创建快照的云盘ID
    /// Required:true
    var diskId:String



    public  init(name:String,diskId:String){
             self.name = name
             self.diskId = diskId
    }

    enum SnapshotSpecCodingKeys: String, CodingKey {
        case name
        case descriptionValue = "description"
        case diskId
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: SnapshotSpecCodingKeys.self)
        self.name = try decoderContainer.decode(String.self, forKey: .name)
        if decoderContainer.contains(.descriptionValue)
        {
            self.descriptionValue = try decoderContainer.decode(String?.self, forKey: .descriptionValue)
        }
        self.diskId = try decoderContainer.decode(String.self, forKey: .diskId)
    }
}
public extension SnapshotSpec{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: SnapshotSpecCodingKeys.self)
         try encoderContainer.encode(name, forKey: .name)
         try encoderContainer.encode(descriptionValue, forKey: .descriptionValue)
         try encoderContainer.encode(diskId, forKey: .diskId)
    }
}
