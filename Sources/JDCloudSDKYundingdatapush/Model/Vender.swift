/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   
   

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  数据推送用户对象
@objc(Vender)
public class Vender:NSObject,Codable{
    /// appkey
    /// Required:true
    var appkey:String
    /// 云鼎数据库实例ID
    /// Required:true
    var ydRdsInstanceId:String
    /// 商家PIN
    /// Required:true
    var venderPin:String



    public  init(appkey:String,ydRdsInstanceId:String,venderPin:String){
             self.appkey = appkey
             self.ydRdsInstanceId = ydRdsInstanceId
             self.venderPin = venderPin
    }

    enum VenderCodingKeys: String, CodingKey {
        case appkey
        case ydRdsInstanceId
        case venderPin
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: VenderCodingKeys.self)
        self.appkey = try decoderContainer.decode(String.self, forKey: .appkey)
        self.ydRdsInstanceId = try decoderContainer.decode(String.self, forKey: .ydRdsInstanceId)
        self.venderPin = try decoderContainer.decode(String.self, forKey: .venderPin)
    }
}
public extension Vender{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: VenderCodingKeys.self)
         try encoderContainer.encode(appkey, forKey: .appkey)
         try encoderContainer.encode(ydRdsInstanceId, forKey: .ydRdsInstanceId)
         try encoderContainer.encode(venderPin, forKey: .venderPin)
    }
}
