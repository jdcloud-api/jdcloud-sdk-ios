/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Key Management Service
   基于硬件保护密钥的安全数据托管服务

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

///  获取机密列表
public class DescribeSecretListExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/secret")
    }
    
}
///  创建机密
public class CreateSecretExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/secret:create")
    }
    
}
///  导入机密
public class ImportSecretExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/secret:import")
    }
    
}
///  获取机密详情
public class DescribeSecretVersionListExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/secret/{secretId}")
    }
    
}
///  修改机密描述
public class UpdateSecretExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/secret/{secretId}")
    }
    
}
///  启用机密
public class EnableSecretExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/secret/{secretId}:enable")
    }
    
}
///  禁用机密
public class DisableSecretExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/secret/{secretId}:disable")
    }
    
}
///  删除机密
public class DeleteSecretExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/secret/{secretId}:delete")
    }
    
}
///  创建机密新的版本，默认为已启用状态
public class CreateSecretVersionExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/secret/{secretId}:createSecretVersion")
    }
    
}
///  导出机密
public class ExportSecretExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/secret/{secretId}:export")
    }
    
}
///  获取指定机密版本的详细信息
public class DescribeSecretVersionInfoExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/secret/{secretId}/version/{version}")
    }
    
}
///  修改机密指定版本配置
public class UpdateSecretVersionExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/secret/{secretId}/version/{version}")
    }
    
}
///  启用指定版本机密
public class EnableSecretVersionExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/secret/{secretId}/version/{version}:enable")
    }
    
}
///  禁用指定版本机密
public class DisableSecretVersionExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/secret/{secretId}/version/{version}:disable")
    }
    
}
///  删除指定版本机密
public class DeleteSecretVersionExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/secret/{secretId}/version/{version}:delete")
    }
    
}
///  获取密钥列表
public class DescribeKeyListExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/key")
    }
    
}
///  创建一个CMK（用户主密钥），默认为启用状态
public class CreateKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/key:create")
    }
    
}
///  获取密钥详情
public class DescribeKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/key/{keyId}")
    }
    
}
///  -   修改对称密钥配置，包括key的名称、用途、是否自动轮换和轮换周期等;
      /// -   修改非对称密钥配置，包括key的名称、用途等。
      /// 
public class UpdateKeyDescriptionExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/key/{keyId}")
    }
    
}
///  启用当前状态为&#x60;已禁用&#x60;的密钥
public class EnableKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/key/{keyId}:enable")
    }
    
}
///  禁用当前状态为&#x60;已启用&#x60;的密钥
public class DisableKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/key/{keyId}:disable")
    }
    
}
///  计划在以后的是个时间点删除密钥，默认为7天
public class ScheduleKeyDeletionExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/key/{keyId}:delete")
    }
    
}
///  取消删除密钥
public class CancelKeyDeletionExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/key/{keyId}:cancelDelete")
    }
    
}
///  立即轮换密钥，自动轮换周期顺延-支持对称密钥
public class KeyRotationExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/key/{keyId}:rotate")
    }
    
}
///  使用密钥对数据进行加密，针对非对称密钥：使用公钥进行加密，仅支持RSA_PKCS1_PADDING填充方式，最大加密数据长度为245字节
public class EncryptExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/key/{keyId}:Encrypt")
    }
    
}
///  使用密钥对数据进行解密，针对非对称密钥：使用私钥进行加密
public class DecryptExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/key/{keyId}:Decrypt")
    }
    
}
///  获取非对称密钥的公钥
public class GetPublicKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/key/{keyId}:GetPublicKey")
    }
    
}
///  使用非对称密钥的私钥签名,签名算法仅支持RSA_PKCS1_PADDING填充方式,最大签名数据长度为4K字节
public class SignExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/key/{keyId}:Sign")
    }
    
}
///  使用非对称密钥的公钥验证签名
public class ValidateExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/key/{keyId}:Validate")
    }
    
}
///  从KMS中获取一对数据密钥的明文/密文
public class GenerateDataKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/key/{keyId}:GenerateDataKey")
    }
    
}
///  获取版本详情
public class DescribeKeyDetailExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/key/{keyId}:describeKeyDetail")
    }
    
}
///  启用指定版本密钥
public class EnableKeyVersionExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/key/{keyId}/version/{version}:enable")
    }
    
}
///  禁用指定版本密钥
public class DisableKeyVersionExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/key/{keyId}/version/{version}:disable")
    }
    
}
///  计划在以后的是个时间点删除指定版本密钥，默认为7天
public class ScheduleKeyVersionDeletionExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/key/{keyId}/version/{version}:delete")
    }
    
}
///  取消删除指定版本密钥
public class CancelKeyVersionDeletionExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PATCH", url: "/key/{keyId}/version/{version}:cancelDelete")
    }
    
}
