/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   
   

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  keyRotateCfg
@objc(KeyRotateCfg)
public class KeyRotateCfg:NSObject,Codable{
    /// 是否自动轮换，默认为false
    /// Required:true
    var autoRotate:Bool
    /// 自动轮换周期，单位为（天），默认为0（永不轮换）
    /// Required:true
    var rotationCycle:Int



    public  init(autoRotate:Bool,rotationCycle:Int){
             self.autoRotate = autoRotate
             self.rotationCycle = rotationCycle
    }

    enum KeyRotateCfgCodingKeys: String, CodingKey {
        case autoRotate
        case rotationCycle
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: KeyRotateCfgCodingKeys.self)
        self.autoRotate = try decoderContainer.decode(Bool.self, forKey: .autoRotate)
        self.rotationCycle = try decoderContainer.decode(Int.self, forKey: .rotationCycle)
    }
}
public extension KeyRotateCfg{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: KeyRotateCfgCodingKeys.self)
         try encoderContainer.encode(autoRotate, forKey: .autoRotate)
         try encoderContainer.encode(rotationCycle, forKey: .rotationCycle)
    }
}
