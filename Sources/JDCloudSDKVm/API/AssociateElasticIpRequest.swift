/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   云主机
   与主机操作相关的接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  为云主机主网卡的主内网IP绑定弹性公网IP。&lt;br&gt;
      ///       /// 一台云主机的主网卡的主内网IP只能绑定一个弹性公网IP，若已绑定弹性公网IP，操作绑定会返回错误。&lt;br&gt;
      ///       /// 
@objc(AssociateElasticIpRequest)
public class AssociateElasticIpRequest:JdCloudRequest
{
    /// 弹性公网IP的ID
    var elasticIpId:String

    /// 云主机ID
    var instanceId:String


    public init(regionId: String,elasticIpId:String,instanceId:String){
        self.elasticIpId = elasticIpId
        self.instanceId = instanceId
        super.init(regionId: regionId)
    }


    enum AssociateElasticIpRequestRequestCodingKeys: String, CodingKey {
        case elasticIpId
        case instanceId
    }

    public override func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: AssociateElasticIpRequestRequestCodingKeys.self)
        try encoderContainer.encode(elasticIpId, forKey: .elasticIpId)
        try encoderContainer.encode(instanceId, forKey: .instanceId)

    }
}
