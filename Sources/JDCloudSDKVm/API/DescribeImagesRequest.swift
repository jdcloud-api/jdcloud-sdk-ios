/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   镜像
   关于主机镜像操作的相关接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  查询镜像信息列表。&lt;br&gt;
      ///       /// 通过此接口可以查询到京东云官方镜像、第三方镜像、私有镜像、或其他用户共享给您的镜像。&lt;br&gt;
      ///       /// 此接口支持分页查询，默认每页20条。
      ///       /// 
@objc(DescribeImagesRequest)
public class DescribeImagesRequest:JdCloudRequest
{
    /// 镜像来源，如果没有指定ids参数，此参数必传；取值范围：public、shared、thirdparty、private
    var imageSource:String?

    /// 操作系统平台，取值范围：Windows Server、CentOS、Ubuntu
    var platform:String?

    /// 镜像ID列表，如果指定了此参数，其它参数可为空
    var ids:[String?]?

    /// 镜像支持的系统盘类型，[localDisk,cloudDisk]
    var rootDeviceType:String?

    /// &lt;a href&#x3D;&quot;http://docs.jdcloud.com/virtual-machines/api/image_status&quot;&gt;参考镜像状态&lt;/a&gt;
    var status:String?

    /// 页码；默认为1
    var pageNumber:Int?

    /// 分页大小；默认为20；取值范围[10, 100]
    var pageSize:Int?




    enum DescribeImagesRequestRequestCodingKeys: String, CodingKey {
        case imageSource
        case platform
        case ids
        case rootDeviceType
        case status
        case pageNumber
        case pageSize
    }

    public override func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: DescribeImagesRequestRequestCodingKeys.self)
        try encoderContainer.encode(imageSource, forKey: .imageSource)
        try encoderContainer.encode(platform, forKey: .platform)
        try encoderContainer.encode(ids, forKey: .ids)
        try encoderContainer.encode(rootDeviceType, forKey: .rootDeviceType)
        try encoderContainer.encode(status, forKey: .status)
        try encoderContainer.encode(pageNumber, forKey: .pageNumber)
        try encoderContainer.encode(pageSize, forKey: .pageSize)

    }
}
