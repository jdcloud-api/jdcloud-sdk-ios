/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   镜像
   关于主机镜像操作的相关接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

/// 批量查询镜像的实例规格限制。&lt;br&gt;
      ///       /// 通过此接口可以查看镜像不支持的实例规格。只有官方镜像、第三方镜像有实例规格的限制，个人的私有镜像没有此限制。
      ///       /// 
@objc(DescribeImageConstraintsBatchResult)
public class DescribeImageConstraintsBatchResult:NSObject,JdCloudResult
{
    /// 镜像限制
    var imageConstraints:[ImageConstraint?]?



    public override init(){
        super.init()
    }

    enum DescribeImageConstraintsBatchResultCodingKeys: String, CodingKey {
        case imageConstraints
    }

    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: DescribeImageConstraintsBatchResultCodingKeys.self)
        if decoderContainer.contains(.imageConstraints)
        {
            self.imageConstraints = try decoderContainer.decode([ImageConstraint?]?.self, forKey: .imageConstraints)
        }
    }
}
public extension DescribeImageConstraintsBatchResult{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: DescribeImageConstraintsBatchResultCodingKeys.self)
        try encoderContainer.encode(imageConstraints, forKey: .imageConstraints)
    }
}
