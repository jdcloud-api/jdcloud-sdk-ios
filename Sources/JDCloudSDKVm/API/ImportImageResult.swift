/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   镜像
   关于主机镜像操作的相关接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

/// 导入镜像，将外部镜像导入到京东云中
      ///       /// 
@objc(ImportImageResult)
public class ImportImageResult:NSObject,JdCloudResult
{
    /// 镜像id
    var imageId:String?

    /// 导入任务id
    var importTaskId:Int?



    public override init(){
        super.init()
    }

    enum ImportImageResultCodingKeys: String, CodingKey {
        case imageId
        case importTaskId
    }

    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: ImportImageResultCodingKeys.self)
        if decoderContainer.contains(.imageId)
        {
            self.imageId = try decoderContainer.decode(String?.self, forKey: .imageId)
        }
        if decoderContainer.contains(.importTaskId)
        {
            self.importTaskId = try decoderContainer.decode(Int?.self, forKey: .importTaskId)
        }
    }
}
public extension ImportImageResult{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: ImportImageResultCodingKeys.self)
        try encoderContainer.encode(imageId, forKey: .imageId)
        try encoderContainer.encode(importTaskId, forKey: .importTaskId)
    }
}
