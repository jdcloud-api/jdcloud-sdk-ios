/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   云主机
   与主机操作相关的接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  为一台云主机挂载一块云硬盘，云主机和云硬盘没有正在进行中的的任务时才可挂载。&lt;br&gt;
      ///       /// 云主机状态必须是&lt;b&gt;running&lt;/b&gt;或&lt;b&gt;stopped&lt;/b&gt;状态。&lt;br&gt;
      ///       /// 本地盘(local类型)做系统盘的云主机可挂载8块云硬盘，云硬盘(cloud类型)做系统盘的云主机可挂载除系统盘外7块云硬盘。
      ///       /// 
@objc(AttachDiskRequest)
public class AttachDiskRequest:JdCloudRequest
{
    /// 云硬盘ID
    var diskId:String

    /// 设备名[vda,vdb,vdc,vdd,vde,vdf,vdg,vdh,vdi,vmj,vdk,vdl,vdm]，挂载系统盘时必传，且需传vda
    var deviceName:String?

    /// 随云主机删除自动删除此云硬盘，默认为False。仅按配置计费云硬盘支持修改此参数，包年包月云硬盘不可修改。
    var autoDelete:Bool?

    /// 云主机ID
    var instanceId:String


    public init(regionId: String,diskId:String,instanceId:String){
        self.diskId = diskId
        self.instanceId = instanceId
        super.init(regionId: regionId)
    }


    enum AttachDiskRequestRequestCodingKeys: String, CodingKey {
        case diskId
        case deviceName
        case autoDelete
        case instanceId
    }

    public override func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: AttachDiskRequestRequestCodingKeys.self)
        try encoderContainer.encode(diskId, forKey: .diskId)
        try encoderContainer.encode(deviceName, forKey: .deviceName)
        try encoderContainer.encode(autoDelete, forKey: .autoDelete)
        try encoderContainer.encode(instanceId, forKey: .instanceId)

    }
}
