/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   
   

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  instanceDiskAttribute
@objc(InstanceDiskAttribute)
public class InstanceDiskAttribute:NSObject,Codable{
    /// 云硬盘ID
    var diskId:String?
    /// 随云主机一起删除，删除主机时自动删除此磁盘，默认为false，本地盘(local)不能更改此值。
      /// 如果云主机中的数据盘(cloud)是包年包月计费方式，此参数不生效。
      /// 如果云主机中的数据盘(cloud)是共享型数据盘，此参数不生效。
      /// 
    var autoDelete:Bool?



    public override init(){
            super.init()
    }

    enum InstanceDiskAttributeCodingKeys: String, CodingKey {
        case diskId
        case autoDelete
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: InstanceDiskAttributeCodingKeys.self)
        if decoderContainer.contains(.diskId)
        {
            self.diskId = try decoderContainer.decode(String?.self, forKey: .diskId)
        }
        if decoderContainer.contains(.autoDelete)
        {
            self.autoDelete = try decoderContainer.decode(Bool?.self, forKey: .autoDelete)
        }
    }
}
public extension InstanceDiskAttribute{
    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: InstanceDiskAttributeCodingKeys.self)
         try encoderContainer.encode(diskId, forKey: .diskId)
         try encoderContainer.encode(autoDelete, forKey: .autoDelete)
    }
}
