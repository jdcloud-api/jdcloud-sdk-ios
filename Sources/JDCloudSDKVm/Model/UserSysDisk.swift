/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   
   

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  userSysDisk
@objc(UserSysDisk)
public class UserSysDisk:NSObject,Codable{
    /// 用户pin
    var pin:String?
    /// 地域
    var region:String?
    /// 系统类型
    var systemType:String?
    /// 默认本地盘系统盘大小
    var systemDiskSize:Int?



    public override init(){
            super.init()
    }

    enum UserSysDiskCodingKeys: String, CodingKey {
        case pin
        case region
        case systemType
        case systemDiskSize
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: UserSysDiskCodingKeys.self)
        if decoderContainer.contains(.pin)
        {
            self.pin = try decoderContainer.decode(String?.self, forKey: .pin)
        }
        if decoderContainer.contains(.region)
        {
            self.region = try decoderContainer.decode(String?.self, forKey: .region)
        }
        if decoderContainer.contains(.systemType)
        {
            self.systemType = try decoderContainer.decode(String?.self, forKey: .systemType)
        }
        if decoderContainer.contains(.systemDiskSize)
        {
            self.systemDiskSize = try decoderContainer.decode(Int?.self, forKey: .systemDiskSize)
        }
    }
}
public extension UserSysDisk{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: UserSysDiskCodingKeys.self)
         try encoderContainer.encode(pin, forKey: .pin)
         try encoderContainer.encode(region, forKey: .region)
         try encoderContainer.encode(systemType, forKey: .systemType)
         try encoderContainer.encode(systemDiskSize, forKey: .systemDiskSize)
    }
}
