/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   解析记录
   云解析OpenAPI自定义线路接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  查询主域名的自定义解析线路的IP段
@objc(GetUserViewIPRequest)
public class GetUserViewIPRequest:JdCloudRequest
{
    /// 主域名ID
    var domainId:Int

    /// 自定义线路ID
    var viewId:Int

    /// 自定义线路名称, 最多64个字符
    var viewName:String?

    /// 分页参数，页的序号, 默认为1
    var pageNumber:Int

    /// 分页参数，每页含有的结果的数目，默认为10
    var pageSize:Int


    public init(regionId: String,domainId:Int,viewId:Int,pageNumber:Int,pageSize:Int){
        self.domainId = domainId
        self.viewId = viewId
        self.pageNumber = pageNumber
        self.pageSize = pageSize
        super.init(regionId: regionId)
    }


    enum GetUserViewIPRequestRequestCodingKeys: String, CodingKey {
        case domainId
        case viewId
        case viewName
        case pageNumber
        case pageSize
    }

    public override func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: GetUserViewIPRequestRequestCodingKeys.self)
        try encoderContainer.encode(domainId, forKey: .domainId)
        try encoderContainer.encode(viewId, forKey: .viewId)
        try encoderContainer.encode(viewName, forKey: .viewName)
        try encoderContainer.encode(pageNumber, forKey: .pageNumber)
        try encoderContainer.encode(pageSize, forKey: .pageSize)

    }
}
