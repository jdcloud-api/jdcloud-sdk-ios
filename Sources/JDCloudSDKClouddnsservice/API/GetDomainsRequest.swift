/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   域名
   云解析OpenAPI域名接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  获取用户所属的主域名列表。   
      ///       /// 请在调用域名相关的接口之前，调用此接口获取相关的domainId和domainName。  
      ///       /// 主域名的相关概念，请查阅&lt;a href&#x3D;&quot;https://docs.jdcloud.com/cn/jd-cloud-dns/product-overview&quot;&gt;云解析文档&lt;/a&gt;
      ///       /// 
@objc(GetDomainsRequest)
public class GetDomainsRequest:JdCloudRequest
{
    /// 分页查询时查询的每页的序号，起始值为1，默认为1
    var pageNumber:Int

    /// 分页查询时设置的每页行数，默认为10
    var pageSize:Int

    /// 关键字，按照”%domainName%”模式匹配主域名
    var domainName:String?


    public init(regionId: String,pageNumber:Int,pageSize:Int){
        self.pageNumber = pageNumber
        self.pageSize = pageSize
        super.init(regionId: regionId)
    }


    enum GetDomainsRequestRequestCodingKeys: String, CodingKey {
        case pageNumber
        case pageSize
        case domainName
    }

    public override func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: GetDomainsRequestRequestCodingKeys.self)
        try encoderContainer.encode(pageNumber, forKey: .pageNumber)
        try encoderContainer.encode(pageSize, forKey: .pageSize)
        try encoderContainer.encode(domainName, forKey: .domainName)

    }
}
