/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   
   

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  setRecords
@objc(SetRecords)
public class SetRecords:NSObject,Codable{
    /// 解析记录的值
    /// Required:true
    var records:[String?]
    /// 解析记录所在的解析线路，请调用getViewTree接口获取。如果不传是默认线路。
    var views:[String?]?
    /// 解析记录的类型，支持A, AAAA, CNAME类型
    /// Required:true
    var type:String



    public  init(records:[String?],type:String){
             self.records = records
             self.type = type
    }

    enum SetRecordsCodingKeys: String, CodingKey {
        case records
        case views
        case type
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: SetRecordsCodingKeys.self)
        self.records = try decoderContainer.decode([String?].self, forKey: .records)
        if decoderContainer.contains(.views)
        {
            self.views = try decoderContainer.decode([String?]?.self, forKey: .views)
        }
        self.type = try decoderContainer.decode(String.self, forKey: .type)
    }
}
public extension SetRecords{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: SetRecordsCodingKeys.self)
         try encoderContainer.encode(records, forKey: .records)
         try encoderContainer.encode(views, forKey: .views)
         try encoderContainer.encode(type, forKey: .type)
    }
}
