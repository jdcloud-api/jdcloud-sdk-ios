/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   
   

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  addViewIP
@objc(AddViewIP)
public class AddViewIP:NSObject,Codable{
    /// 主域名ID，请使用getDomains接口获取
    /// Required:true
    var domainId:Int
    /// 自定义线路ID
    /// Required:true
    var viewId:Int
    /// 自定义线路名称, 最多64个字符
    /// Required:true
    var viewName:String
    /// 此线路需要添加的ip段。  
      /// IPv4地址段支持1.2.3.4-5.6.7.8和1.2.3.4/16两种格式。    
      /// IPv6地址段支持CIDR格式，例如：11:22:33:44:55::99/64
      /// 
    /// Required:true
    var ipRanges:[String?]



    public  init(domainId:Int,viewId:Int,viewName:String,ipRanges:[String?]){
             self.domainId = domainId
             self.viewId = viewId
             self.viewName = viewName
             self.ipRanges = ipRanges
    }

    enum AddViewIPCodingKeys: String, CodingKey {
        case domainId
        case viewId
        case viewName
        case ipRanges
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: AddViewIPCodingKeys.self)
        self.domainId = try decoderContainer.decode(Int.self, forKey: .domainId)
        self.viewId = try decoderContainer.decode(Int.self, forKey: .viewId)
        self.viewName = try decoderContainer.decode(String.self, forKey: .viewName)
        self.ipRanges = try decoderContainer.decode([String?].self, forKey: .ipRanges)
    }
}
public extension AddViewIP{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: AddViewIPCodingKeys.self)
         try encoderContainer.encode(domainId, forKey: .domainId)
         try encoderContainer.encode(viewId, forKey: .viewId)
         try encoderContainer.encode(viewName, forKey: .viewName)
         try encoderContainer.encode(ipRanges, forKey: .ipRanges)
    }
}
