/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   
   

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  storeServiceDetailVo
@objc(StoreServiceDetailVo)
public class StoreServiceDetailVo:NSObject,Codable{
    /// 商品spu对应的id
    var spuId:Int?
    /// 商品sku对应的id
    var skuId:Int?
    /// 滚存天数
    var storeDays:Int?
    /// 开始时间，格式：yyyy-MM-dd HH:mm:ss
    var startTime:String?
    /// 结束时间，格式：yyyy-MM-dd HH:mm:ss
    var endTime:String?



    public override init(){
            super.init()
    }

    enum StoreServiceDetailVoCodingKeys: String, CodingKey {
        case spuId
        case skuId
        case storeDays
        case startTime
        case endTime
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: StoreServiceDetailVoCodingKeys.self)
        if decoderContainer.contains(.spuId)
        {
            self.spuId = try decoderContainer.decode(Int?.self, forKey: .spuId)
        }
        if decoderContainer.contains(.skuId)
        {
            self.skuId = try decoderContainer.decode(Int?.self, forKey: .skuId)
        }
        if decoderContainer.contains(.storeDays)
        {
            self.storeDays = try decoderContainer.decode(Int?.self, forKey: .storeDays)
        }
        if decoderContainer.contains(.startTime)
        {
            self.startTime = try decoderContainer.decode(String?.self, forKey: .startTime)
        }
        if decoderContainer.contains(.endTime)
        {
            self.endTime = try decoderContainer.decode(String?.self, forKey: .endTime)
        }
    }
}
public extension StoreServiceDetailVo{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: StoreServiceDetailVoCodingKeys.self)
         try encoderContainer.encode(spuId, forKey: .spuId)
         try encoderContainer.encode(skuId, forKey: .skuId)
         try encoderContainer.encode(storeDays, forKey: .storeDays)
         try encoderContainer.encode(startTime, forKey: .startTime)
         try encoderContainer.encode(endTime, forKey: .endTime)
    }
}
