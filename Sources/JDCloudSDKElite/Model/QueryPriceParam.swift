/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   
   

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  queryPriceParam
@objc(QueryPriceParam)
public class QueryPriceParam:NSObject,Codable{
    /// 操作类型 1:创建 2:续费 3:升降配
    /// Required:true
    var cmd:Int
    /// 打包购买包数
    /// Required:true
    var packageCount:Int
    /// OrderList
    /// Required:true
    var orderList:[OrderPriceProtocolVo?]



    public  init(cmd:Int,packageCount:Int,orderList:[OrderPriceProtocolVo?]){
             self.cmd = cmd
             self.packageCount = packageCount
             self.orderList = orderList
    }

    enum QueryPriceParamCodingKeys: String, CodingKey {
        case cmd
        case packageCount
        case orderList
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: QueryPriceParamCodingKeys.self)
        self.cmd = try decoderContainer.decode(Int.self, forKey: .cmd)
        self.packageCount = try decoderContainer.decode(Int.self, forKey: .packageCount)
        self.orderList = try decoderContainer.decode([OrderPriceProtocolVo?].self, forKey: .orderList)
    }
}
public extension QueryPriceParam{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: QueryPriceParamCodingKeys.self)
         try encoderContainer.encode(cmd, forKey: .cmd)
         try encoderContainer.encode(packageCount, forKey: .packageCount)
         try encoderContainer.encode(orderList, forKey: .orderList)
    }
}
