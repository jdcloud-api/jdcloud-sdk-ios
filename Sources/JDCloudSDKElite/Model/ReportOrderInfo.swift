/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   
   

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  reportOrderInfo
@objc(ReportOrderInfo)
public class ReportOrderInfo:NSObject,Codable{
    /// 订单号
    /// Required:true
    var orderNumber:String
    /// 经销商账号
    var distributorAccount:String?
    /// 经销商名称
    var distributorName:String?
    /// 补充信息，填写当前订单的一些描述信息
    var extraInfo:String?



    public  init(orderNumber:String){
             self.orderNumber = orderNumber
    }

    enum ReportOrderInfoCodingKeys: String, CodingKey {
        case orderNumber
        case distributorAccount
        case distributorName
        case extraInfo
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: ReportOrderInfoCodingKeys.self)
        self.orderNumber = try decoderContainer.decode(String.self, forKey: .orderNumber)
        if decoderContainer.contains(.distributorAccount)
        {
            self.distributorAccount = try decoderContainer.decode(String?.self, forKey: .distributorAccount)
        }
        if decoderContainer.contains(.distributorName)
        {
            self.distributorName = try decoderContainer.decode(String?.self, forKey: .distributorName)
        }
        if decoderContainer.contains(.extraInfo)
        {
            self.extraInfo = try decoderContainer.decode(String?.self, forKey: .extraInfo)
        }
    }
}
public extension ReportOrderInfo{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: ReportOrderInfoCodingKeys.self)
         try encoderContainer.encode(orderNumber, forKey: .orderNumber)
         try encoderContainer.encode(distributorAccount, forKey: .distributorAccount)
         try encoderContainer.encode(distributorName, forKey: .distributorName)
         try encoderContainer.encode(extraInfo, forKey: .extraInfo)
    }
}
