/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   elite交付服务相关接口
   elite交付服务相关接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  分页查询交付单信息
@objc(ListSaleServiceRequest)
public class ListSaleServiceRequest:JdCloudRequest
{
    /// 页码（最小1）
    var pageNo:Int

    /// 每页记录数（最小10，最大100）
    var pageSize:Int

    /// 交付单号
    var deliverNumber:String?

    /// 交付状态
    var deliverStatus:Int?

    /// 交付单创建起始时间，格式：yyyy-MM-dd HH:mm:ss
    var createDtStart:String?

    /// 交付单创建结束时间，格式：yyyy-MM-dd HH:mm:ss
    var createDtEnd:String?


    public init(regionId: String,pageNo:Int,pageSize:Int){
        self.pageNo = pageNo
        self.pageSize = pageSize
        super.init(regionId: regionId)
    }


    enum ListSaleServiceRequestRequestCodingKeys: String, CodingKey {
        case pageNo
        case pageSize
        case deliverNumber
        case deliverStatus
        case createDtStart
        case createDtEnd
    }

    public override func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: ListSaleServiceRequestRequestCodingKeys.self)
        try encoderContainer.encode(pageNo, forKey: .pageNo)
        try encoderContainer.encode(pageSize, forKey: .pageSize)
        try encoderContainer.encode(deliverNumber, forKey: .deliverNumber)
        try encoderContainer.encode(deliverStatus, forKey: .deliverStatus)
        try encoderContainer.encode(createDtStart, forKey: .createDtStart)
        try encoderContainer.encode(createDtEnd, forKey: .createDtEnd)

    }
}
