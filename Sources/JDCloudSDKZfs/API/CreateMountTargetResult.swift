/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Mount-Target
   挂载目标相关接口。

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

/// - 为一个文件系统创建一个挂载目标。通过这个挂载目标,你可以挂载将一个文件系统挂载到主机实例上。
      ///       /// - 创建一个挂载目标，为这个挂载目标分配一个Id
      ///       /// 
@objc(CreateMountTargetResult)
public class CreateMountTargetResult:NSObject,JdCloudResult
{
    /// 挂载目标 ID
    var mountTargetId:String?



    public override init(){
        super.init()
    }

    enum CreateMountTargetResultCodingKeys: String, CodingKey {
        case mountTargetId
    }

    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: CreateMountTargetResultCodingKeys.self)
        if decoderContainer.contains(.mountTargetId)
        {
            self.mountTargetId = try decoderContainer.decode(String?.self, forKey: .mountTargetId)
        }
    }
}
public extension CreateMountTargetResult{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: CreateMountTargetResultCodingKeys.self)
        try encoderContainer.encode(mountTargetId, forKey: .mountTargetId)
    }
}
