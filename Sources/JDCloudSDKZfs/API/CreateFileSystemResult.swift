/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   File-System
   文件系统相关接口。

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

/// - 创建一个新的文件系统，为这个文件系统分配一个Id
      ///       /// 
@objc(CreateFileSystemResult)
public class CreateFileSystemResult:NSObject,JdCloudResult
{
    /// 文件系统 ID
    var fileSystemId:String?



    public override init(){
        super.init()
    }

    enum CreateFileSystemResultCodingKeys: String, CodingKey {
        case fileSystemId
    }

    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: CreateFileSystemResultCodingKeys.self)
        if decoderContainer.contains(.fileSystemId)
        {
            self.fileSystemId = try decoderContainer.decode(String?.self, forKey: .fileSystemId)
        }
    }
}
public extension CreateFileSystemResult{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: CreateFileSystemResultCodingKeys.self)
        try encoderContainer.encode(fileSystemId, forKey: .fileSystemId)
    }
}
