/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   镜像仓库认证信息
   关于镜像仓库认证信息的相关接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

/// 创建一个 secret，用于存放镜像仓库机密相关信息。
      ///       /// 
@objc(CreateSecretResult)
public class CreateSecretResult:NSObject,JdCloudResult
{
    /// SecretName
    var secretName:String?



    public override init(){
        super.init()
    }

    enum CreateSecretResultCodingKeys: String, CodingKey {
        case secretName
    }

    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: CreateSecretResultCodingKeys.self)
        if decoderContainer.contains(.secretName)
        {
            self.secretName = try decoderContainer.decode(String?.self, forKey: .secretName)
        }
    }
}
public extension CreateSecretResult{
    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: CreateSecretResultCodingKeys.self)
        try encoderContainer.encode(secretName, forKey: .secretName)
    }
}
