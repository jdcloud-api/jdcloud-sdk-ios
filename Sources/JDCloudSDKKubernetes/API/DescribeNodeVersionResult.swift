/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   ServiceConfig
   查询服务配置信息

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

/// 查询节点版本
@objc(DescribeNodeVersionResult)
public class DescribeNodeVersionResult:NSObject,JdCloudResult
{
    /// NodeVersion
    var nodeVersion:NodeVersion?



    public override init(){
        super.init()
    }

    enum DescribeNodeVersionResultCodingKeys: String, CodingKey {
        case nodeVersion
    }

    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: DescribeNodeVersionResultCodingKeys.self)
        if decoderContainer.contains(.nodeVersion)
        {
            self.nodeVersion = try decoderContainer.decode(NodeVersion?.self, forKey: .nodeVersion)
        }
    }
}
public extension DescribeNodeVersionResult{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: DescribeNodeVersionResultCodingKeys.self)
        try encoderContainer.encode(nodeVersion, forKey: .nodeVersion)
    }
}
