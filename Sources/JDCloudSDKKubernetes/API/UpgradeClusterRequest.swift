/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Cluster
   集群相关接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  触发升级
@objc(UpgradeClusterRequest)
public class UpgradeClusterRequest:JdCloudRequest
{
    /// 升级范围
    var scope:String

    /// 节点组 id
    var nodeGroupIds:[String?]?

    /// 指定升级到的版本
    var verison:String

    /// 集群 ID
    var clusterId:String


    public init(regionId: String,scope:String,verison:String,clusterId:String){
        self.scope = scope
        self.verison = verison
        self.clusterId = clusterId
        super.init(regionId: regionId)
    }


    enum UpgradeClusterRequestRequestCodingKeys: String, CodingKey {
        case scope
        case nodeGroupIds
        case verison
        case clusterId
    }

    public override func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: UpgradeClusterRequestRequestCodingKeys.self)
        try encoderContainer.encode(scope, forKey: .scope)
        try encoderContainer.encode(nodeGroupIds, forKey: .nodeGroupIds)
        try encoderContainer.encode(verison, forKey: .verison)
        try encoderContainer.encode(clusterId, forKey: .clusterId)

    }
}
