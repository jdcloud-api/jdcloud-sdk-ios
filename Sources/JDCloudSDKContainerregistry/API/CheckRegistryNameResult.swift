/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Registry
   容器镜像服务注册表相关接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

/// 查询指定注册表名称是否已经存在以及是否符合命名规范。
      ///       /// 
@objc(CheckRegistryNameResult)
public class CheckRegistryNameResult:NSObject,JdCloudResult
{
    /// 表示用户指定的注册表是否通过校验， 0 通过 1 名称为空 2 不符合规范 3 重名
    var code:Int?

    /// code字段非零时，给出详细原因。
    var reason:String?



    public override init(){
        super.init()
    }

    enum CheckRegistryNameResultCodingKeys: String, CodingKey {
        case code
        case reason
    }

    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: CheckRegistryNameResultCodingKeys.self)
        if decoderContainer.contains(.code)
        {
            self.code = try decoderContainer.decode(Int?.self, forKey: .code)
        }
        if decoderContainer.contains(.reason)
        {
            self.reason = try decoderContainer.decode(String?.self, forKey: .reason)
        }
    }
}
public extension CheckRegistryNameResult{
    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: CheckRegistryNameResultCodingKeys.self)
        try encoderContainer.encode(code, forKey: .code)
        try encoderContainer.encode(reason, forKey: .reason)
    }
}
