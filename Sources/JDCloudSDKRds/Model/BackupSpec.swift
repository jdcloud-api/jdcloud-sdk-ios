/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   
   

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  backupSpec
@objc(BackupSpec)
public class BackupSpec:NSObject,Codable{
    /// 备份名称&lt;br&gt;SQL Server：最长支持64个英文字符或等长的中文字符&lt;br&gt;MySQL：只允许数字、小写字母及英文下划线“_”,不超过32字符
    var backupName:String?
    /// 需要备份的数据库名称列表。如不填，则备份整个实例&lt;br&gt;- **MySQL：不支持该参数**&lt;br&gt;- **SQL Server：支持**
    var dbNames:[String?]?



    public override init(){
            super.init()
    }

    enum BackupSpecCodingKeys: String, CodingKey {
        case backupName
        case dbNames
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: BackupSpecCodingKeys.self)
        if decoderContainer.contains(.backupName)
        {
            self.backupName = try decoderContainer.decode(String?.self, forKey: .backupName)
        }
        if decoderContainer.contains(.dbNames)
        {
            self.dbNames = try decoderContainer.decode([String?]?.self, forKey: .dbNames)
        }
    }
}
public extension BackupSpec{
    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: BackupSpecCodingKeys.self)
         try encoderContainer.encode(backupName, forKey: .backupName)
         try encoderContainer.encode(dbNames, forKey: .dbNames)
    }
}
