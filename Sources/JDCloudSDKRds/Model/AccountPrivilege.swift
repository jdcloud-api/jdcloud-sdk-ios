/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   
   

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  accountPrivilege
@objc(AccountPrivilege)
public class AccountPrivilege:NSObject,Codable{
    /// 数据库名称，具体规则可参见帮助中心文档:[名称及密码限制](../../../documentation/Database-and-Cache-Service/RDS/Introduction/Restrictions/SQLServer-Restrictions.md)
    var dbName:String?
    /// 账号对数据库所具有的权限，权限的具体定义可以参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)
    var privilege:String?



    public override init(){
            super.init()
    }

    enum AccountPrivilegeCodingKeys: String, CodingKey {
        case dbName
        case privilege
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: AccountPrivilegeCodingKeys.self)
        if decoderContainer.contains(.dbName)
        {
            self.dbName = try decoderContainer.decode(String?.self, forKey: .dbName)
        }
        if decoderContainer.contains(.privilege)
        {
            self.privilege = try decoderContainer.decode(String?.self, forKey: .privilege)
        }
    }
}
public extension AccountPrivilege{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: AccountPrivilegeCodingKeys.self)
         try encoderContainer.encode(dbName, forKey: .dbName)
         try encoderContainer.encode(privilege, forKey: .privilege)
    }
}
