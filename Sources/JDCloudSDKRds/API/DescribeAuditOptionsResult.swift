/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   审计管理
   审计管理相关接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

/// 获取当前系统所支持的各种数据库版本的审计选项及相应的推荐选项&lt;br&gt;- 仅支持SQL Server
@objc(DescribeAuditOptionsResult)
public class DescribeAuditOptionsResult:NSObject,JdCloudResult
{
    /// Enabled
    var enabled:[String?]?

    /// Disabled
    var disabled:[String?]?



    public override init(){
        super.init()
    }

    enum DescribeAuditOptionsResultCodingKeys: String, CodingKey {
        case enabled
        case disabled
    }

    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: DescribeAuditOptionsResultCodingKeys.self)
        if decoderContainer.contains(.enabled)
        {
            self.enabled = try decoderContainer.decode([String?]?.self, forKey: .enabled)
        }
        if decoderContainer.contains(.disabled)
        {
            self.disabled = try decoderContainer.decode([String?]?.self, forKey: .disabled)
        }
    }
}
public extension DescribeAuditOptionsResult{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: DescribeAuditOptionsResultCodingKeys.self)
        try encoderContainer.encode(enabled, forKey: .enabled)
        try encoderContainer.encode(disabled, forKey: .disabled)
    }
}
