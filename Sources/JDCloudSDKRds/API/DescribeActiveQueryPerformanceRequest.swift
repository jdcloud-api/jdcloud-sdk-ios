/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   性能统计
   性能统计相关接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  根据用户定义的查询条件，获取正在执行中的SQL执行的性能信息。用户可以根据这些信息查找与SQL执行相关的性能瓶颈，并进行优化。&lt;br&gt;- 仅支持SQL Server
@objc(DescribeActiveQueryPerformanceRequest)
public class DescribeActiveQueryPerformanceRequest:JdCloudRequest
{
    /// 需要查询的数据库名，多个数据库名之间用英文逗号分隔，默认所有数据库
    var db:String?

    /// 返回执行时间大于等于threshold的记录，默认10，单位秒
    var threshold:Int?

    /// 显示数据的页码，默认为1，取值范围：[-1,1000)。pageNumber为-1时，返回所有数据页码；超过总页数时，显示最后一页。
    var pageNumber:Int?

    /// 每页显示的数据条数，默认为50，取值范围：[1,100]，只能为10的倍数
    var pageSize:Int?

    /// RDS 实例ID，唯一标识一个RDS实例
    var instanceId:String


    public init(regionId: String,instanceId:String){
        self.instanceId = instanceId
        super.init(regionId: regionId)
    }


    enum DescribeActiveQueryPerformanceRequestRequestCodingKeys: String, CodingKey {
        case db
        case threshold
        case pageNumber
        case pageSize
        case instanceId
    }

    public override func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: DescribeActiveQueryPerformanceRequestRequestCodingKeys.self)
        try encoderContainer.encode(db, forKey: .db)
        try encoderContainer.encode(threshold, forKey: .threshold)
        try encoderContainer.encode(pageNumber, forKey: .pageNumber)
        try encoderContainer.encode(pageSize, forKey: .pageSize)
        try encoderContainer.encode(instanceId, forKey: .instanceId)

    }
}
