/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   单库上云
   单库上云相关接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  删除用户通过单库上云工具上传的数据库备份文件&lt;br&gt;- 仅支持SQL Server
@objc(DeleteImportFileRequest)
public class DeleteImportFileRequest:JdCloudRequest
{
    /// 共享文件的全局ID，可从上传文件查询接口describeImportFiles中获取；如果该文件不是共享文件，则无须输入该字段
    var sharedFileGid:String?

    /// RDS 实例ID，唯一标识一个RDS实例
    var instanceId:String

    /// 单库上云文件名
    var fileName:String


    public init(regionId: String,instanceId:String,fileName:String){
        self.instanceId = instanceId
        self.fileName = fileName
        super.init(regionId: regionId)
    }


    enum DeleteImportFileRequestRequestCodingKeys: String, CodingKey {
        case sharedFileGid
        case instanceId
        case fileName
    }

    public override func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: DeleteImportFileRequestRequestCodingKeys.self)
        try encoderContainer.encode(sharedFileGid, forKey: .sharedFileGid)
        try encoderContainer.encode(instanceId, forKey: .instanceId)
        try encoderContainer.encode(fileName, forKey: .fileName)

    }
}
