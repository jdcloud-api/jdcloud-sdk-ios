/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   审计管理
   审计管理相关接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

/// 仅支持查看MySQL实例的审计内容
@objc(DescribeAuditResultResult)
public class DescribeAuditResultResult:NSObject,JdCloudResult
{
    /// AuditResult
    var auditResult:[AuditResult?]?

    /// TotalCount
    var totalCount:Int?



    public override init(){
        super.init()
    }

    enum DescribeAuditResultResultCodingKeys: String, CodingKey {
        case auditResult
        case totalCount
    }

    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: DescribeAuditResultResultCodingKeys.self)
        if decoderContainer.contains(.auditResult)
        {
            self.auditResult = try decoderContainer.decode([AuditResult?]?.self, forKey: .auditResult)
        }
        if decoderContainer.contains(.totalCount)
        {
            self.totalCount = try decoderContainer.decode(Int?.self, forKey: .totalCount)
        }
    }
}
public extension DescribeAuditResultResult{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: DescribeAuditResultResultCodingKeys.self)
        try encoderContainer.encode(auditResult, forKey: .auditResult)
        try encoderContainer.encode(totalCount, forKey: .totalCount)
    }
}
