/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   实例管理
   实例管理相关接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

/// 获取当前账号下所有RDS实例及MySQL只读实例的概要信息，例如实例类型，版本，计费信息等
@objc(DescribeInstancesResult)
public class DescribeInstancesResult:NSObject,JdCloudResult
{
    /// DbInstances
    var dbInstances:[DBInstance?]?

    /// TotalCount
    var totalCount:Int?



    public override init(){
        super.init()
    }

    enum DescribeInstancesResultCodingKeys: String, CodingKey {
        case dbInstances
        case totalCount
    }

    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: DescribeInstancesResultCodingKeys.self)
        if decoderContainer.contains(.dbInstances)
        {
            self.dbInstances = try decoderContainer.decode([DBInstance?]?.self, forKey: .dbInstances)
        }
        if decoderContainer.contains(.totalCount)
        {
            self.totalCount = try decoderContainer.decode(Int?.self, forKey: .totalCount)
        }
    }
}
public extension DescribeInstancesResult{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: DescribeInstancesResultCodingKeys.self)
        try encoderContainer.encode(dbInstances, forKey: .dbInstances)
        try encoderContainer.encode(totalCount, forKey: .totalCount)
    }
}
