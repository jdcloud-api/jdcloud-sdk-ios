/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Message-Content-APIs
   富媒体模板内容创建、查询相关接口

   OpenAPI spec version: v2
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  查询富媒体短信内容列表接口
@objc(QueryTemplateListRequest)
public class QueryTemplateListRequest:JdCloudRequest
{
    /// 应用ID
    var appId:String

    /// 查询标题关键词
    var title:String?

    /// 第几页
    var pageNum:Int

    /// 每页多少条记录
    var pageLimit:Int

    /// 审核状态：0: 审核中 1: 通过 2: 未通过 4:待提交
    var status:String?

    /// 开始时间,格式YYYY-MM-DD
    var startTime:String?

    /// 结束时间,格式YYYY-MM-DD
    var endTime:String?


    public init(regionId: String,appId:String,pageNum:Int,pageLimit:Int){
        self.appId = appId
        self.pageNum = pageNum
        self.pageLimit = pageLimit
        super.init(regionId: regionId)
    }


    enum QueryTemplateListRequestRequestCodingKeys: String, CodingKey {
        case appId
        case title
        case pageNum
        case pageLimit
        case status
        case startTime
        case endTime
    }

    public override func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: QueryTemplateListRequestRequestCodingKeys.self)
        try encoderContainer.encode(appId, forKey: .appId)
        try encoderContainer.encode(title, forKey: .title)
        try encoderContainer.encode(pageNum, forKey: .pageNum)
        try encoderContainer.encode(pageLimit, forKey: .pageLimit)
        try encoderContainer.encode(status, forKey: .status)
        try encoderContainer.encode(startTime, forKey: .startTime)
        try encoderContainer.encode(endTime, forKey: .endTime)

    }
}
