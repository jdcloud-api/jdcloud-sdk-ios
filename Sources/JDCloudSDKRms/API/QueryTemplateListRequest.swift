/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   短信内容接口
   API related to  Template

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  查询富媒体短信内容列表接口
@objc(QueryTemplateListRequest)
public class QueryTemplateListRequest:JdCloudRequest
{
    /// appId参数
    var appId:String?

    /// searchKey参数
    var searchKey:String?

    /// pageNum参数
    var pageNum:String?

    /// pageLimit参数
    var pageLimit:String?

    /// status参数
    var status:String?

    /// title参数
    var title:String?

    /// startTime参数
    var startTime:String?

    /// endTime参数
    var endTime:String?




    enum QueryTemplateListRequestRequestCodingKeys: String, CodingKey {
        case appId
        case searchKey
        case pageNum
        case pageLimit
        case status
        case title
        case startTime
        case endTime
    }

    public override func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: QueryTemplateListRequestRequestCodingKeys.self)
        try encoderContainer.encode(appId, forKey: .appId)
        try encoderContainer.encode(searchKey, forKey: .searchKey)
        try encoderContainer.encode(pageNum, forKey: .pageNum)
        try encoderContainer.encode(pageLimit, forKey: .pageLimit)
        try encoderContainer.encode(status, forKey: .status)
        try encoderContainer.encode(title, forKey: .title)
        try encoderContainer.encode(startTime, forKey: .startTime)
        try encoderContainer.encode(endTime, forKey: .endTime)

    }
}
