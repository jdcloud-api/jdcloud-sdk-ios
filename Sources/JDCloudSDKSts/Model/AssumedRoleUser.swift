/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   
   

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  assumedRoleUser
@objc(AssumedRoleUser)
public class AssumedRoleUser:NSObject,Codable{
    /// 代入角色id
    var assumedRoleId:String?
    /// 京东云资源标识(jrn)
    var jrn:String?



    public override init(){
            super.init()
    }

    enum AssumedRoleUserCodingKeys: String, CodingKey {
        case assumedRoleId
        case jrn
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: AssumedRoleUserCodingKeys.self)
        if decoderContainer.contains(.assumedRoleId)
        {
            self.assumedRoleId = try decoderContainer.decode(String?.self, forKey: .assumedRoleId)
        }
        if decoderContainer.contains(.jrn)
        {
            self.jrn = try decoderContainer.decode(String?.self, forKey: .jrn)
        }
    }
}
public extension AssumedRoleUser{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: AssumedRoleUserCodingKeys.self)
         try encoderContainer.encode(assumedRoleId, forKey: .assumedRoleId)
         try encoderContainer.encode(jrn, forKey: .jrn)
    }
}
