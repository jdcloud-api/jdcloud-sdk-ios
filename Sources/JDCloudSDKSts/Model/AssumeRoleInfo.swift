/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   
   

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  assumeRoleInfo
@objc(AssumeRoleInfo)
public class AssumeRoleInfo:NSObject,Codable{
    /// 角色资源标识(jrn)
    /// Required:true
    var roleJrn:String
    /// 角色会话名称
    /// Required:true
    var roleSessionName:String
    /// 临时凭证有效期，单位秒，取值范围：3600~您所扮演的角色设置的maxSessionDuration，默认3600
    var durationSeconds:Int?



    public  init(roleJrn:String,roleSessionName:String){
             self.roleJrn = roleJrn
             self.roleSessionName = roleSessionName
    }

    enum AssumeRoleInfoCodingKeys: String, CodingKey {
        case roleJrn
        case roleSessionName
        case durationSeconds
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: AssumeRoleInfoCodingKeys.self)
        self.roleJrn = try decoderContainer.decode(String.self, forKey: .roleJrn)
        self.roleSessionName = try decoderContainer.decode(String.self, forKey: .roleSessionName)
        if decoderContainer.contains(.durationSeconds)
        {
            self.durationSeconds = try decoderContainer.decode(Int?.self, forKey: .durationSeconds)
        }
    }
}
public extension AssumeRoleInfo{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: AssumeRoleInfoCodingKeys.self)
         try encoderContainer.encode(roleJrn, forKey: .roleJrn)
         try encoderContainer.encode(roleSessionName, forKey: .roleSessionName)
         try encoderContainer.encode(durationSeconds, forKey: .durationSeconds)
    }
}
