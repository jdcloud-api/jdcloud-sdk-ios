/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   job api
   API COMPILE CODE TO PACKAGE

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

/// 查询获取编译任务列表，并显示最后一次编译的一些信息
      ///       /// /v2/regions/cn-south-1/jobs/?sorts.1.name&#x3D;status&amp;sorts.1.direction&#x3D;asc&amp;pageNumber&#x3D;1&amp;pageSize&#x3D;10&amp;filters.1.name&#x3D;name&amp;filters.1.values.1&#x3D;我的job
      ///       /// 
@objc(GetJobsResult)
public class GetJobsResult:NSObject,JdCloudResult
{
    /// TotalCount
    var totalCount:Int?

    /// Jobs
    var jobs:[SimpleJob?]?

    /// RequestId
    var requestId:String?



    public override init(){
        super.init()
    }

    enum GetJobsResultCodingKeys: String, CodingKey {
        case totalCount
        case jobs
        case requestId
    }

    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: GetJobsResultCodingKeys.self)
        if decoderContainer.contains(.totalCount)
        {
            self.totalCount = try decoderContainer.decode(Int?.self, forKey: .totalCount)
        }
        if decoderContainer.contains(.jobs)
        {
            self.jobs = try decoderContainer.decode([SimpleJob?]?.self, forKey: .jobs)
        }
        if decoderContainer.contains(.requestId)
        {
            self.requestId = try decoderContainer.decode(String?.self, forKey: .requestId)
        }
    }
}
public extension GetJobsResult{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: GetJobsResultCodingKeys.self)
        try encoderContainer.encode(totalCount, forKey: .totalCount)
        try encoderContainer.encode(jobs, forKey: .jobs)
        try encoderContainer.encode(requestId, forKey: .requestId)
    }
}
