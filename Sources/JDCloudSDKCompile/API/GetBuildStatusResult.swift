/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   job api
   API COMPILE CODE TO PACKAGE

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

/// 查询构建任务执行的状态
@objc(GetBuildStatusResult)
public class GetBuildStatusResult:NSObject,JdCloudResult
{
    /// 执行任务的job名称
    var name:String?

    /// 开始执行构建的时间
    var createdAt:Int?

    /// 执行构建的状态
    var status:String?

    /// 执行构建完成的百分比
    var completionRate:Double?



    public override init(){
        super.init()
    }

    enum GetBuildStatusResultCodingKeys: String, CodingKey {
        case name
        case createdAt
        case status
        case completionRate
    }

    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: GetBuildStatusResultCodingKeys.self)
        if decoderContainer.contains(.name)
        {
            self.name = try decoderContainer.decode(String?.self, forKey: .name)
        }
        if decoderContainer.contains(.createdAt)
        {
            self.createdAt = try decoderContainer.decode(Int?.self, forKey: .createdAt)
        }
        if decoderContainer.contains(.status)
        {
            self.status = try decoderContainer.decode(String?.self, forKey: .status)
        }
        if decoderContainer.contains(.completionRate)
        {
            self.completionRate = try decoderContainer.decode(Double?.self, forKey: .completionRate)
        }
    }
}
public extension GetBuildStatusResult{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: GetBuildStatusResultCodingKeys.self)
        try encoderContainer.encode(name, forKey: .name)
        try encoderContainer.encode(createdAt, forKey: .createdAt)
        try encoderContainer.encode(status, forKey: .status)
        try encoderContainer.encode(completionRate, forKey: .completionRate)
    }
}
