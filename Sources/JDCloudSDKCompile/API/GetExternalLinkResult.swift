/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   job api
   API COMPILE CODE TO PACKAGE

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

/// 生成带有效期的包地址
@objc(GetExternalLinkResult)
public class GetExternalLinkResult:NSObject,JdCloudResult
{
    /// Url
    var url:String?

    /// Token
    var token:String?



    public override init(){
        super.init()
    }

    enum GetExternalLinkResultCodingKeys: String, CodingKey {
        case url
        case token
    }

    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: GetExternalLinkResultCodingKeys.self)
        if decoderContainer.contains(.url)
        {
            self.url = try decoderContainer.decode(String?.self, forKey: .url)
        }
        if decoderContainer.contains(.token)
        {
            self.token = try decoderContainer.decode(String?.self, forKey: .token)
        }
    }
}
public extension GetExternalLinkResult{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: GetExternalLinkResultCodingKeys.self)
        try encoderContainer.encode(url, forKey: .url)
        try encoderContainer.encode(token, forKey: .token)
    }
}
