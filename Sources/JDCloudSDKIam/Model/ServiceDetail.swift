/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   
   

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  serviceDetail
@objc(ServiceDetail)
public class ServiceDetail:NSObject,Codable{
    /// 产品线名称
    /// Required:true
    var serviceName:String
    /// 策略相关OpenAPI的Action列表
    /// Required:true
    var apiList:[APIInfo?]
    /// 资源列表
    /// Required:true
    var resourceList:[String?]



    public  init(serviceName:String,apiList:[APIInfo?],resourceList:[String?]){
             self.serviceName = serviceName
             self.apiList = apiList
             self.resourceList = resourceList
    }

    enum ServiceDetailCodingKeys: String, CodingKey {
        case serviceName
        case apiList
        case resourceList
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: ServiceDetailCodingKeys.self)
        self.serviceName = try decoderContainer.decode(String.self, forKey: .serviceName)
        self.apiList = try decoderContainer.decode([APIInfo?].self, forKey: .apiList)
        self.resourceList = try decoderContainer.decode([String?].self, forKey: .resourceList)
    }
}
public extension ServiceDetail{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: ServiceDetailCodingKeys.self)
         try encoderContainer.encode(serviceName, forKey: .serviceName)
         try encoderContainer.encode(apiList, forKey: .apiList)
         try encoderContainer.encode(resourceList, forKey: .resourceList)
    }
}
