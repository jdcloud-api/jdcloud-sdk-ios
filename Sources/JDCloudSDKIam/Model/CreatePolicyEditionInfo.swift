/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   
   

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  createPolicyEditionInfo
@objc(CreatePolicyEditionInfo)
public class CreatePolicyEditionInfo:NSObject,Codable{
    /// 策略文档，最多6144个字符
    /// Required:true
    var policyDocument:String
    /// 是否设置当前策略文档为默认版本
    /// Required:true
    var setAsDefault:Bool



    public  init(policyDocument:String,setAsDefault:Bool){
             self.policyDocument = policyDocument
             self.setAsDefault = setAsDefault
    }

    enum CreatePolicyEditionInfoCodingKeys: String, CodingKey {
        case policyDocument
        case setAsDefault
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: CreatePolicyEditionInfoCodingKeys.self)
        self.policyDocument = try decoderContainer.decode(String.self, forKey: .policyDocument)
        self.setAsDefault = try decoderContainer.decode(Bool.self, forKey: .setAsDefault)
    }
}
public extension CreatePolicyEditionInfo{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: CreatePolicyEditionInfoCodingKeys.self)
         try encoderContainer.encode(policyDocument, forKey: .policyDocument)
         try encoderContainer.encode(setAsDefault, forKey: .setAsDefault)
    }
}
