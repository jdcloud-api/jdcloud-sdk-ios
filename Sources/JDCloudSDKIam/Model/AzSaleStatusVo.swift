/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   
   

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation

///  azSaleStatusVo
@objc(AzSaleStatusVo)
public class AzSaleStatusVo:NSObject,Codable{
    /// null
    var az:String?
    /// 是否售罄 (0未售罄 1售罄)
    var canSale:Int?
    /// 是否可见(1可见 0不可见)
    var visible:Int?



    public override init(){
            super.init()
    }

    enum AzSaleStatusVoCodingKeys: String, CodingKey {
        case az
        case canSale
        case visible
    }


    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: AzSaleStatusVoCodingKeys.self)
        if decoderContainer.contains(.az)
        {
            self.az = try decoderContainer.decode(String?.self, forKey: .az)
        }
        if decoderContainer.contains(.canSale)
        {
            self.canSale = try decoderContainer.decode(Int?.self, forKey: .canSale)
        }
        if decoderContainer.contains(.visible)
        {
            self.visible = try decoderContainer.decode(Int?.self, forKey: .visible)
        }
    }
}
public extension AzSaleStatusVo{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: AzSaleStatusVoCodingKeys.self)
         try encoderContainer.encode(az, forKey: .az)
         try encoderContainer.encode(canSale, forKey: .canSale)
         try encoderContainer.encode(visible, forKey: .visible)
    }
}
