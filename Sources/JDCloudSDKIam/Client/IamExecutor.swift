/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   SubUser Management
   SubUser Management API

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

///  创建角色
public class CreateRoleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/role")
    }
    
}
///  查询角色详情
public class DescribeRoleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/role/{roleName}")
    }
    
}
///  删除角色
public class DeleteRoleExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/role/{roleName}")
    }
    
}
///  修改角色内置policy
public class UpdateAssumeRolePolicyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/role/{roleName}/assumeRolePolicy")
    }
    
}
///  查询角色列表
public class DescribeRolesExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/roles")
    }
    
}
///  为角色绑定策略
public class AttachRolePolicyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/role/{roleName}:attachRolePolicy")
    }
    
}
///  为角色绑定策略
public class DetachRolePolicyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/role/{roleName}:detachRolePolicy")
    }
    
}
///  查询角色授权策略列表
public class DescribeRolePoliciesExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/role/{roleName}/policies")
    }
    
}
///  创建策略
public class CreatePolicyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/policy")
    }
    
}
///  查询策略详情
public class DescribePolicyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/policy/{policyName}")
    }
    
}
///  修改策略文档
public class UpdatePolicyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/policy/{policyName}")
    }
    
}
///  删除策略
public class DeletePolicyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/policy/{policyName}")
    }
    
}
///  修改策略描述
public class UpdatePolicyDescriptionExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/policy/{policyName}/description")
    }
    
}
///  查询策略列表
public class DescribePoliciesExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/policies")
    }
    
}
///  创建策略
public class CreatePermissionExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/permission")
    }
    
}
///  查询策略详情
public class DescribePermissionDetailExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/permission/{permissionId}")
    }
    
}
///  修改策略
public class UpdatePermissionExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/permission/{permissionId}")
    }
    
}
///  查询策略列表
public class DescribePermissionsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/permissions")
    }
    
}
///  查询子用户策略列表
public class DescribeSubUserPermissionsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/subUser/{subUser}/permisssions")
    }
    
}
///  为子用户绑定策略
public class AddPermissionsToSubUserExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/subUser/{subUser}/permisssions")
    }
    
}
///  为子用户解绑策略
public class RemovePermissionOfSubUserExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/subUser/{subUser}/permissions/{permissionId}")
    }
    
}
///  启用子用户AccessKey
public class EnableSubUserAccessKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/subUser/{subUser}/accessKey/{accessKey}:enable")
    }
    
}
///  禁用子用户的AccessKey
public class DisableSubUserAccessKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/subUser/{subUser}/accessKey/{accessKey}:disable")
    }
    
}
///  删除子用户的AccessKey
public class DeleteSubUserAccessKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/subUser/{subUser}/accessKey/{accessKey}")
    }
    
}
///  查询主账号AccessKey列表
public class DescribeUserAccessKeysExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/regions/{regionId}/userAccessKeys")
    }
    
}
///  创建主账号AccessKey
public class CreateUserAccessKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/regions/{regionId}/userAccessKey")
    }
    
}
///  启用主账号AccessKey
public class EnabledUserAccessKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/userAccessKey/{accessKey}:enabled")
    }
    
}
///  禁用主账号AccessKey
public class DisabledUserAccessKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/regions/{regionId}/userAccessKey/{accessKey}:disabled")
    }
    
}
///  删除AccessKey
public class DeleteUserAccessKeyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/regions/{regionId}/userAccessKey/{accessKey}")
    }
    
}
///  创建用户组
public class CreateGroupExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/group")
    }
    
}
///  查询用户组详情
public class DescribeGroupExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/group/{groupName}")
    }
    
}
///  修改用户组
public class UpdateGroupExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/group/{groupName}")
    }
    
}
///  删除用户组
public class DeleteGroupExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/group/{groupName}")
    }
    
}
///  查询用户组内的子用户列表 
public class DescribeGroupSubUsersExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/group/{groupName}/subUsers")
    }
    
}
///  查询用户组列表
public class DescribeGroupsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/groups")
    }
    
}
///  列举用户组的策略
public class DescribeAttachedGroupPoliciesExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/group/{groupName}/policies")
    }
    
}
///  为用户组解绑策略
public class DetachGroupPolicyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/group/{groupName}:detachGroupPolicy")
    }
    
}
///  为用户组绑定策略
public class AttachGroupPolicyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/group/{groupName}:attachGroupPolicy")
    }
    
}
///  将子用户从组中删除
public class RemoveSubUserFromGroupExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/group/{groupName}:removeSubUserFromGroup")
    }
    
}
///  添加子用户到用户组中
public class AddSubUserToGroupExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/group/{groupName}:addSubUserToGroup")
    }
    
}
///  创建子用户
public class CreateSubUserExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/subUser")
    }
    
}
///  查询子用户信息
public class DescribeSubUserExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/subUser/{subUser}")
    }
    
}
///  修改子用户信息
public class UpdateSubUserExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "PUT", url: "/subUser/{subUser}")
    }
    
}
///  删除子用户信息
public class DeleteSubUserExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/subUser/{subUser}")
    }
    
}
///  查询子用户列表
public class DescribeSubUsersExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/subUsers")
    }
    
}
///  查询子用户所属的所有组
public class DescribeSubUserGroupsExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/subUser/{subUser}/groups")
    }
    
}
///  查询子用户绑定的策略列表
public class DescribeAttachedSubUserPoliciesExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "GET", url: "/subUser/{subUser}/policies")
    }
    
}
///  为子用户解绑策略
public class DetachSubUserPolicyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "DELETE", url: "/subUser/{subUser}:detachSubUserPolicy")
    }
    
}
///  为子用户绑定策略
public class AttachSubUserPolicyExecutor:JDCloudExecutor {
    
    public init(jdCloudClient: JDCloudClient) {
        super.init(jdCloudClient: jdCloudClient, method: "POST", url: "/subUser/{subUser}:attachSubUserPolicy")
    }
    
}
