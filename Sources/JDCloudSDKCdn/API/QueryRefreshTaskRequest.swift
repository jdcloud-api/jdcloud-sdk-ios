/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   JCloud Openapi For CDN
   Openapi For JCLOUD cdn

   OpenAPI spec version: v1
   Contact: pid-cdn@jd.com

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  查询刷新预热任务
@objc(QueryRefreshTaskRequest)
public class QueryRefreshTaskRequest:JdCloudRequest
{
    /// 查询起始时间,UTC时间，格式为:yyyy-MM-dd&#39;T&#39;HH:mm:ss&#39;Z&#39;，示例:2018-10-21T10:00:00Z
    var startTime:String?

    /// 查询截止时间,UTC时间，格式为:yyyy-MM-dd&#39;T&#39;HH:mm:ss&#39;Z&#39;，示例:2018-10-21T10:00:00Z
    var endTime:String?

    /// url或者目录的模糊查询关键字
    var keyword:String?

    /// 任务id
    var taskId:String?

    /// null
    var taskStatus:String?

    /// null
    var taskType:String?

    /// 分页页数,默认值1
    var pageNumber:Int32?

    /// 分页页面大小,默认值50
    var pageSize:Int32?




    enum QueryRefreshTaskRequestRequestCodingKeys: String, CodingKey {
        case startTime
        case endTime
        case keyword
        case taskId
        case taskStatus
        case taskType
        case pageNumber
        case pageSize
    }

    public override func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: QueryRefreshTaskRequestRequestCodingKeys.self)
        try encoderContainer.encode(startTime, forKey: .startTime)
        try encoderContainer.encode(endTime, forKey: .endTime)
        try encoderContainer.encode(keyword, forKey: .keyword)
        try encoderContainer.encode(taskId, forKey: .taskId)
        try encoderContainer.encode(taskStatus, forKey: .taskStatus)
        try encoderContainer.encode(taskType, forKey: .taskType)
        try encoderContainer.encode(pageNumber, forKey: .pageNumber)
        try encoderContainer.encode(pageSize, forKey: .pageSize)

    }
}
