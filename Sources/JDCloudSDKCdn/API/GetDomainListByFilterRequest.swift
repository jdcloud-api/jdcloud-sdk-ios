/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   JCloud Openapi For CDN
   Openapi For JCLOUD cdn

   OpenAPI spec version: v1
   Contact: pid-cdn@jd.com

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  通过标签查询加速域名接口
@objc(GetDomainListByFilterRequest)
public class GetDomainListByFilterRequest:JdCloudRequest
{
    /// 根据关键字进行模糊匹配
    var keyWord:String?

    /// pageNumber,默认值为1
    var pageNumber:Int32?

    /// pageSize,默认值为20,最大值为50
    var pageSize:Int32?

    /// 根据域名状态查询, 可选值[offline, online, configuring, auditing, audit_reject]
    var status:String?

    /// 域名类型，(web:静态小文件，download:大文件加速，vod:视频加速，live:直播加速),不传查所有
    var type:String?

    /// 标签过滤条件
    var tagFilters:[TagFilter?]?




    enum GetDomainListByFilterRequestRequestCodingKeys: String, CodingKey {
        case keyWord
        case pageNumber
        case pageSize
        case status
        case type
        case tagFilters
    }

    public override func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: GetDomainListByFilterRequestRequestCodingKeys.self)
        try encoderContainer.encode(keyWord, forKey: .keyWord)
        try encoderContainer.encode(pageNumber, forKey: .pageNumber)
        try encoderContainer.encode(pageSize, forKey: .pageSize)
        try encoderContainer.encode(status, forKey: .status)
        try encoderContainer.encode(type, forKey: .type)
        try encoderContainer.encode(tagFilters, forKey: .tagFilters)

    }
}
