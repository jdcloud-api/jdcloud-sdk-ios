/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   SSL Certificate
   SSL数字证书相关信息接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

/// 上传证书
@objc(UploadCertResult)
public class UploadCertResult:NSObject,JdCloudResult
{
    /// CertId
    var certId:String?

    /// 对私钥文件使用sha256算法计算的摘要信息
    var digest:String?



    public override init(){
        super.init()
    }

    enum UploadCertResultCodingKeys: String, CodingKey {
        case certId
        case digest
    }

    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: UploadCertResultCodingKeys.self)
        if decoderContainer.contains(.certId)
        {
            self.certId = try decoderContainer.decode(String?.self, forKey: .certId)
        }
        if decoderContainer.contains(.digest)
        {
            self.digest = try decoderContainer.decode(String?.self, forKey: .digest)
        }
    }
}
public extension UploadCertResult{
    func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: UploadCertResultCodingKeys.self)
        try encoderContainer.encode(certId, forKey: .certId)
        try encoderContainer.encode(digest, forKey: .digest)
    }
}
